<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
        "/usr/share/xml/docbook/schema/dtd/5.0/docbook.dtd"[

<!ENTITY author				SYSTEM "author.xml">
<!ENTITY legal				SYSTEM "legal.xml">

<!-- urls -->
<!ENTITY % rfc_urls SYSTEM 'rfc.urls.xml'>
%rfc_urls;

<!ENTITY % inetdoc_urls SYSTEM 'inetdoc.urls.xml'>
%inetdoc_urls;

<!ENTITY url.ppp-wikipedia
'<link xmlns="http://docbook.org/ns/docbook" xlink:href="https://en.wikipedia.org/wiki/Point-to-Point_Protocol">
<citetitle>Point-to-Point Protocol</citetitle></link>'>

<!ENTITY url.pppoe-wikipedia
'<link xmlns="http://docbook.org/ns/docbook" xlink:href="https://en.wikipedia.org/wiki/Point-to-point_protocol_over_Ethernet">
<citetitle>Point-to-point protocol over Ethernet</citetitle></link>'>

<!ENTITY url.startup-scripts
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="https://gitlab.inetdoc.net/labs/startup-scripts">
  <citetitle>startup-scripts</citetitle></link>'>

<!ENTITY url.netplan-doc
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="https://netplan.readthedocs.io/en/stable/">
  <citetitle>Netplan documentation</citetitle></link>'>

<!ENTITY url.incus
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="https://linuxcontainers.org/incus/docs/main/">
  <citetitle>Incus</citetitle></link>'>

<!ENTITY url.debian-systemd
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="https://wiki.debian.org/systemd/Services">
  <citetitle>systemd Services</citetitle></link>'>

<!-- A copy of http://www.w3.org/2003/entities/2007/w3centities-f.ent is at:
/usr/local/share -->
<!ENTITY % w3centities-f PUBLIC "-//W3C//ENTITIES Combined Set//EN//XML"
	"/usr/local/share/w3centities-f.ent">
%w3centities-f;
]>

<article xml:lang='fr' xml:id='pppoe'>
<info>
	<title>Routage inter-VLAN et protocole PPPoE</title>
	&author;
<abstract>
<para>
	<informaltable frame='none' pgwide='1'>
	<tgroup cols='2' align='left' colsep='0' rowsep='0'>
	<colspec colwidth='5*'/>
	<colspec colwidth='220px'/>
	<tbody>
	<row>
		<entry valign='top'>
        <para>La généralisation de l'utilisation de la fibre optique dans les
        réseaux étendus (<acronym>WAN</acronym>) jusqu'au raccordement
        domestique s'est accompagnée d'un changement important au niveau des
        liaisons de données. La technologie Ethernet est devenue universelle et
        couvre tous les besoins de commutation de circuits.</para>

        <para>Cependant, pour raccorder les sites d'entreprises via des réseaux
        d'opérateurs, les fonctions historiques du protocole
        <acronym>PPP</acronym> (<wordasword>Point-to-Point
        Protocol</wordasword>) sont toujours utiles. C'est là que le protocole
        <acronym>PPPoE</acronym> intervient. Il permet d'associer un réseau de
        diffusion Ethernet avec un fonctionnement point à point typique des
        réseaux étendus.</para>

        <para>Le but des manipulations présentées dans ce document est
        d'illustrer la mise en œuvre d'une session <acronym>PPPoE</acronym>
        entre un routeur virtuel central et un site distant factice (une autre
        machine virtuelle) qui héberge quelques services.</para>
		</entry>
		<entry>
		<inlinemediaobject>
		<imageobject role='html'>
			<imagedata fileref='images/pppoe-logical-topology.png' format='PNG' width='360px' scalefit='1'/>
		</imageobject>
		<imageobject role='fo'>
			<imagedata fileref='images/pppoe-logical-topology.png' format='PNG' width='6cm' scalefit='1'/>
	    </imageobject>
		</inlinemediaobject>
		</entry>
	</row>
	</tbody>
	</tgroup>
	</informaltable>
</para>
</abstract>
<keywordset>
	<keyword>8021q</keyword>
	<keyword>access</keyword>
	<keyword>arp</keyword>
	<keyword>dot1q</keyword>
	<keyword>ieee802.1q</keyword>
	<keyword>iproute2</keyword>
	<keyword>iptables</keyword>
	<keyword>incus</keyword>
	<keyword>openvswitch</keyword>
	<keyword>route</keyword>
	<keyword>routing</keyword>
	<keyword>sysctl</keyword>
	<keyword>trunk</keyword>
</keywordset>
</info>

<sect1 xml:id='pppoe.meta'>
	&legal;
	<bridgehead xml:id='pppoe.meta.file'
	renderas='sect2'>Méta-information</bridgehead>

	<para>Ce document est écrit avec <link
	xlink:href="http://www.docbook.org"><citetitle>DocBook</citetitle></link>
	XML sur un système <link
	xlink:href="https://www.debian.org"><citetitle>Debian
	GNU/Linux</citetitle></link>. Il est disponible en version imprimable au
	format PDF : <link
	xlink:href="https://www.inetdoc.net/pdf/__printbasename__"><literal>__printbasename__</literal></link>.</para>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='pppoe.ethernet'>
	<title>Interface Ethernet &amp; protocole PPP</title>

    <para>Le format de trame historique <acronym>HDLC</acronym> est abandonné.
    Il faut dire que ce format de trame date du développement des liaisons
    séries asynchrones. Aujourd'hui, les liaisons sur fibres optiques sont
    <wordasword>Full-Duplex</wordasword> et on ne se préoccupe plus de
    synchronisation au niveau de la couche liaison de données. Le format de
    trame Ethernet devient ainsi une référence universelle.</para>

    <para>Le protocole <acronym>PPP</acronym> offre depuis l'origine une
    configuration indépendante de la technologie du réseau étendu aussi bien au
    niveau de la couche liaison que de la couche réseau.</para>

    <para>L'association entre trame Ethernet et <acronym>PPP</acronym> se fait
    grâce à un autre protocole baptisé <acronym>PPPoE</acronym>. Ce dernier
    permet d'encapsuler des trames <acronym>PPP</acronym> dans des trames
    Ethernet. Il est décrit à la page &url.pppoe-wikipedia; qui permet de
    traiter les questions ci-après.</para>

<qandaset defaultlabel='number'>
	<qandadiv>
	<qandaentry>
	<question>
	<para><phrase>Quelle est la raison de l'ajout d'un nouveau protocole entre
	Ethernet et <acronym>PPP</acronym>&nbsp;?</phrase></para>

	<para>Consulter la page &url.pppoe-wikipedia;.</para>
	</question>
	<answer>
    <para>Le protocole <acronym>PPP</acronym>, initialement destiné aux
    liaisons point à point, nécessite un mécanisme de découverte des extrémités
    pour fonctionner sur un réseau local Ethernet, qui est un réseau de
    diffusion où le canal de transmission est partagé entre tous les
    hôtes.</para>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
    <para><phrase>Quels sont les messages de découverte et de session
    <acronym>PPPoE</acronym>&nbsp;? Préciser qui est l'initiative de la
    découverte.</phrase></para>

	<para>Consulter la page &url.pppoe-wikipedia;.</para>
	</question>
	<answer>
	<itemizedlist>
	<listitem>
	<para>Client to server: Initiation (PADI)</para>
	</listitem>
	<listitem>
	<para>Server to client: Offer (PADO)</para>
	</listitem>
	<listitem>
	<para>Client to server: request (PADR)</para>
	</listitem>
	<listitem>
	<para>Server to client: session-confirmation (PADS)</para>
	</listitem>
	<listitem>
	<para>Either end to other end: termination (PADT)</para>
	</listitem>
	</itemizedlist>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quels sont les autres mécanismes de découverte de voisins
	connus dans un réseau local Ethernet&nbsp;?</phrase></para>
	</question>
	<answer>
	<para>Voici la liste des «grands classiques».</para>

	<itemizedlist>
	<listitem>
	<para>Address Resolution Protocol (<acronym>ARP</acronym>).</para>

	<para>Quelle est l'adresse <acronym>MAC</acronym> d'un hôte dont on connaît
	l'adresse <acronym>IPv4</acronym>&nbsp;?</para>
	</listitem>
	<listitem>
	<para>Neighbor Discovery Protocol (<acronym>NDP</acronym>).</para>

	<para>Ce protocole est associé à <acronym>IPv6</acronym>. Il définit 5
	messages <acronym>ICMPv6</acronym> qui couvrent les mêmes opérations que
	celles réalisées par le protocole <acronym>ARP</acronym> sans avoir recours
	à la diffusion et qui ajoutent de nouvelles fonctions.</para>
	</listitem>
	<listitem>
	<para>Multicast DNS (<acronym>mDNS</acronym>) ou
		<wordasword>Bonjour</wordasword>.</para>

	<para>Ce protocole entre dans la famille <wordasword>zeroconf</wordasword>
	qui a pour but d'annoncer et de fournir des éléments de configuration aux
	hôtes du réseau sans faire appel à une infrastructure de services de la
	couche application tels que <acronym>DNS</acronym> et
	<acronym>DHCP</acronym>.</para>
	</listitem>
	</itemizedlist>
	</answer>
	</qandaentry>
	</qandadiv>
</qandaset>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='pppoe.topology'>
	<title>Topologies logiques et virtuelles</title>

    <para>La représentation de la topologie logique ci-dessous montre deux
    routeurs. Le routeur placé à gauche assure l'interconnexion entre un réseau
    d'infrastructure (VLAN rouge) et le réseau opérateur (VLAN violet). Le
    routeur placé à droite assure l'interconnexion entre le même réseau
    opérateur et le réseau du site distant (VLAN vert). Les services hébergés
    sur le site distant sont compris dans le même réseau (VLAN vert).</para>

    <para>Sur le réseau étendu factice, on distingue deux autres
    <acronym>VLAN</acronym>s&nbsp;: le <acronym>VLAN</acronym> violet appelé
    <citetitle>Management VLAN</citetitle> est utilisé pour la supervision et
    le <acronym>VLAN</acronym> orange appelé <citetitle>Data VLAN</citetitle>
    est utilisé pour acheminer les données entre le site central
    (<citetitle>Hub</citetitle>) et le site distant
    (<citetitle>Spoke</citetitle>).</para>

    <para>C'est sur ce dernier réseau (VLAN orange) que la session
    <acronym>PPPoE</acronym> doit être établie pour que le plan d'adressage
    réseau de l'entreprise soit conforme.</para>

    <para>Enfin, les deux rectangles en gris pointillé identifient les machines
    virtuelles utilisées pour les manipulations.</para>

	<mediaobject>
	<imageobject role='html'>
	<imagedata fileref='images/pppoe-logical-topology.png' format='PNG' width='720px' scalefit='1'/>
	</imageobject>
	<imageobject role='fo'>
	<imagedata fileref='images/pppoe-logical-topology.png' format='PNG' width='16cm' scalefit='1'/>
	</imageobject>
	<textobject>
	<phrase>Topologie type</phrase>
	</textobject>
	<caption>
	<para><link xlink:href='images/pppoe-logical-topology.png'>Topologie logique</link></para>
	</caption>
	</mediaobject>

    <para>La représentation de la topologie vue sous l'angle de la
    virtualisation sur un système hôte hyperviseur montre que le
    <acronym>VLAN</acronym> vert appelé <wordasword>Container VLAN</wordasword>
    n'est visible qu'à l'intérieur de la machine virtuelle qui représente le
    site distant. Ce <acronym>VLAN</acronym> est isolé et ses préfixes réseau
    <acronym>IPv4</acronym> et <acronym>IPv6</acronym> doivent être
    <emphasis>routés</emphasis>. C'est la raison pour laquelle la machine
    virtuelle du site distant dispose de son propre commutateur&nbsp;:
    <systemitem>asw-host</systemitem>.</para>

    <para>Tous les autres <acronym>VLANs</acronym> sont présents sur le
    commutateur virtuel de couche distribution appelé
    <systemitem>dsw-host</systemitem>. Ce commutateur appartient au système
    hôte. Il assure le raccordement entre les réseaux physiques et virtualisés.
    Les deux routeurs virtuels <citetitle>Hub</citetitle> et
    <citetitle>Spoke</citetitle> sont raccordés sur des ports configurés en
    mode <wordasword>trunk</wordasword> sur lesquels le trafic de plusieurs
    <acronym>VLAN</acronym>s doit transiter.</para>

	<para>Côté conteneurs, le raccordement au commutateur
	<systemitem>asw-host</systemitem> sera assuré automatiquement par le
	gestionnaire <citetitle>Incus</citetitle>.</para>

	<mediaobject>
	<imageobject role='html'>
	<imagedata fileref='images/pppoe-hypervisor-topology.png' format='PNG' width='700px' scalefit='1'/>
	</imageobject>
	<imageobject role='fo'>
	<imagedata fileref='images/pppoe-hypervisor-topology.png' format='PNG' width='16cm' scalefit='1'/>
	</imageobject>
	<textobject>
	<phrase>Topologie type</phrase>
	</textobject>
	<caption>
	<para><link xlink:href='images/pppoe-hypervisor-topology.png'>Topologie hébergée</link></para>
	</caption>
	</mediaobject>

	<para>Voici le plan d'adressage utilisé pour la maquette qui sert à la
	rédaction de ce support de travaux pratiques.</para>

<table frame='all' pgwide='1'>
	<title>Affectation des numéros de VLANs, des adresses de passerelle et des
	authentifiants</title>
	<tgroup cols='5' align='left' colsep='1' rowsep='1'>
	<colspec colname='c1' colwidth='1*'/>
	<colspec colname='c2' colwidth='1*'/>
	<colspec colname='c3' colwidth='1*'/>
	<colspec colname='c4' colwidth='1*'/>
	<colspec colname='c5' colwidth='2*'/>
	<thead>
	<row>
		<?dbfo bgcolor="#333" ?>
		<?dbfo color="#fff" ?>
		<entry>Planète</entry>
		<entry>VLAN</entry>
		<entry>Numéro</entry>
		<entry>Type</entry>
		<entry>Adresse</entry>
	</row>
	</thead>
	<tbody>
	<!-- Maquette -->
	<row>
	<entry morerows='5' valign='middle'>Maquette</entry>
	<entry>Rouge</entry>
	<entry>360</entry>
	<entry>Passerelle</entry>
	<entry>
		<systemitem class='ipaddress'>192.168.104.130/29</systemitem><?custom-linebreak?>
		<systemitem class='ipaddress'>2001:678:3fc:168::1/64</systemitem>
	</entry>
	</row>
	<row>
	<entry morerows='1'>Violet</entry>
	<entry morerows='1'>440</entry>
	<entry morerows='1'>Adresse</entry>
	<entry>
		<systemitem class='ipaddress'>fe80:1b8::1</systemitem>
	</entry>
	</row>
	<row>
	<entry>
		<systemitem class='ipaddress'>fe80:1b8::2</systemitem>
	</entry>
	</row>
	<row>
	<entry morerows='1'>Orange</entry>
	<entry morerows='1'>441</entry>
	<entry>Point à point</entry>
	<entry>
		<systemitem class='ipaddress'>10.4.41.1:10.4.41.2</systemitem>
	</entry>
	</row>
	<row>
	<entry>Authentifiants</entry>
	<entry><systemitem>spoke_site0 / 5p0k3</systemitem></entry>
	</row>
	<row>
	<entry>Vert</entry>
	<entry>40</entry>
	<entry>Passerelle</entry>
	<entry>
		<systemitem class='ipaddress'>203.0.113.1/24</systemitem><?custom-linebreak?>
		<systemitem class='ipaddress'>fda0:7a62:28::1/64</systemitem>
	</entry>
	</row>
	</tbody>
	</tgroup>
</table>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='pppoe.dsw'>
	<title>Raccordement au commutateur de distribution</title>

	<para>Dans cette section, on étudie le raccordement des deux machines
	virtuelles au commutateur de distribution sur le système hôte.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
	<para><phrase>Comment contrôler la configuration des ports du commutateur
	de distribution sur le système hôte&nbsp;?</phrase></para>
	</question>
	<answer>
    <para>Le commutateur virtuel implanté sur le système hôte est géré par
    <citetitle>Open vSwitch</citetitle>. On fait donc appel à la commande
    <command>ovs-vsctl</command> pour accéder aux paramètres de la
    configuration des ports.</para>

    <itemizedlist>
    <listitem>
    <para>Pour le port nommé <systemitem>tap200</systemitem>, on obtient le
    paramètre <systemitem>vlan_mode</systemitem> avec
    l'instruction&nbsp;:</para>
<screen>sudo ovs-vsctl get port tap200 vlan_mode
<emphasis>trunk</emphasis></screen>
    <para>Le mode <systemitem>trunk</systemitem> correspond à un canal de
    transmission unique dans lequel circule le trafic de plusieurs domaines de
    diffusion ou <acronym>VLANs</acronym>.</para>
    </listitem>
    <listitem>
    <para>Pour le port nommé <systemitem>tap2</systemitem>, on obtient la
    valeur <systemitem>access</systemitem> pour le même paramètre&nbsp;:</para>
<screen>sudo ovs-vsctl get port tap2 vlan_mode
<emphasis>access</emphasis></screen>
    <para>Ici, le mode <systemitem>access</systemitem> correspond à un canal de
    transmission dans lequel circule le trafic d'un seul et unique domaine de
    diffusion ou <acronym>VLAN</acronym>.</para>
    </listitem>
    </itemizedlist>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment afficher le numéro de <acronym>VLAN</acronym>
    attribué au port en mode accès du commutateur de distribution sur le
    système hôte&nbsp;?</phrase></para>
    </question>
    <answer>
    <para>On reprend la même commande que dans la question précédente avec le
    mot clé <option>tag</option>.</para>
<screen>sudo ovs-vsctl get port tap2 tag
<emphasis>20</emphasis></screen>
    </answer>
    </qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment affecter le numéro de <acronym>VLAN</acronym>
    attribué au port en mode accès du commutateur de distribution sur le
    système hôte&nbsp;?</phrase></para>
    </question>
    <answer>
    <para>On reprend à nouveau la même commande avec l'option <option>set</option>.</para>
<screen>sudo ovs-vsctl set port <emphasis>tap2 tag=440</emphasis></screen>

    <para>Les valeurs données dans l'exemple ci-dessus sont à changer suivant
    les attributions du plan d'adressage des réseaux d'hébergement et de
    conteneurs.</para>
    </answer>
    </qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment configurer les ports du commutateur avant le
    lancement des machines virtuelles&nbsp;?</phrase></para>
    </question>
    <answer>
    <para>On utilise le script de procédure <filename>switch-conf.py</filename>
    qui applique les déclarations contenues dans un fichier
    <acronym>YAML</acronym>. Le code du script est accessible à partir du dépôt
    Git &url.startup-scripts;.</para>

    <para>Voici une copie du fichier de configuration des deux ports de
    commutateur.</para>
<screen>ovs:
  switches:
    - name: dsw-host
      ports:
        - name: tap5 # Hub port
          type: OVSPort
          vlan_mode: trunk
          trunks: [360, 440, 441]
        - name: tap6 # Spoke port
          type: OVSPort
          vlan_mode: trunk
          trunks: [52, 440, 441] # Avec VLAN d'accès temporaire
#         trunks: [440, 441] # Sans VLAN d'accès temporaire</screen>

    <para>On applique les paramètres définis ci-dessus.</para>

<screen>$HOME/masters/scripts/switch-conf.py switch.yaml</screen>

    <para>On obtient les résultats suivants.</para>
<screen>----------------------------------------
Configuring switch dsw-host
>> Port tap5 vlan_mode is already set to trunk
>> Port tap5 trunks set to [360, 440, 441]
>> Port tap6 vlan_mode set to trunk
>> Port tap6 trunks set to [52, 440, 441]
----------------------------------------</screen>

    <para>Les numéros de port de commutateur et de <acronym>VLAN</acronym>
    donnés dans les exemples ci-dessus sont à changer suivant le
    contexte.</para>
    </answer>
    </qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment lancer les machines virtuelles associées aux rôles
    routeur et hébergement de conteneurs&nbsp;?</phrase></para>
    </question>
    <answer>
    <para>On utilise le script de procédure <filename>lab-startup.py</filename>
    qui applique les déclarations contenues dans un fichier
    <acronym>YAML</acronym>. Le code du script est accessible à partir du dépôt
    Git &url.startup-scripts;.</para>

    <para>Voici une copie du fichier de déclaration des deux machines
    virtuelles.</para>

<screen>kvm:
  vms:
    - vm_name: hub
      master_image: debian-testing-amd64.qcow2 # master image to be used
      force_copy: false # do not force copy the master image to the VM image
      memory: 1024
      tapnum: 5
    - vm_name: spoke
      master_image: debian-testing-amd64.qcow2 # master image to be used
      force_copy: false # do not force copy the master image to the VM image
      memory: 1024
      tapnum: 6</screen>

    <para>On lance les deux machines virtuelles avec le script
    <command>lab-startup.py</command>.</para>

<screen>$HOME/masters/scripts/lab-startup.py lab2.yaml</screen>

<screen>Copying /home/etudianttest/masters/debian-testing-amd64.qcow2 to hub.qcow2...done
Creating OVMF_CODE.fd symlink...
Creating hub_OVMF_VARS.fd file...
Starting hub...
~> Virtual machine filename   : hub.qcow2
~> RAM size                   : 1024MB
~> SPICE VDI port number      : 5905
~> telnet console port number : 2305
~> MAC address                : b8:ad:ca:fe:00:05
~> Switch port interface      : tap5, trunk mode
~> IPv6 LL address            : fe80::baad:caff:fefe:5%dsw-host
hub started!
Copying /home/etudianttest/masters/debian-testing-amd64.qcow2 to spoke.qcow2...done
Creating spoke_OVMF_VARS.fd file...
Starting spoke...
~> Virtual machine filename   : spoke.qcow2
~> RAM size                   : 1024MB
~> SPICE VDI port number      : 5906
~> telnet console port number : 2306
~> MAC address                : b8:ad:ca:fe:00:06
~> Switch port interface      : tap6, trunk mode
~> IPv6 LL address            : fe80::baad:caff:fefe:6%dsw-host
spoke started!</screen>

    <para>Les deux machines virtuelles sont maintenant disponibles pour la
    suite des manipulations.</para>
    </answer>
    </qandaentry>
	</qandaset>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='pppoe.hub'>
	<title>Routeur Hub</title>

    <para>Dans cette section, on étudie la machine virtuelle qui joue le rôle
    de routeur entre le réseau d'infrastructure (VLAN rouge) et le réseau
    étendu (VLANs violet et orange) qui dessert le site distant.</para>

	<sect2 xml:id='pppoe.hub.interfaces'>
		<title>Configuration des interfaces du routeur</title>

	<para>Une fois la machine virtuelle routeur lancée, les premières étapes
	consistent à lui attribuer un nouveau nom et à configurer les interfaces
	réseau pour joindre les hôtes voisins.</para>

	<qandaset defaultlabel='number'>
    <qandaentry>
    <question>
    <para><phrase>Comment changer le nom de la machine
    virtuelle&nbsp;?</phrase></para>
    </question>
    <answer>
    <para>Il faut éditer le fichier <filename>/etc/hostname</filename> en
    remplaçant le nom local par le nom voulu. Il est ensuite nécessaire de
    redémarrer pour que le nouveau nom soit pris en compte par tous les outils
    du système.</para>

<screen><prompt>etu@localhost:~$</prompt> echo hub | sudo tee /etc/hostname
<prompt>etu@vm0:~$</prompt> sudo reboot</screen>
    </answer>
    </qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment appliquer les configurations réseau
    <acronym>IPv4</acronym> et <acronym>IPv6</acronym> à partir de l'unique
    interface du routeur&nbsp;?</phrase></para>

    <para>Consulter la documentation de <citetitle>Netplan</citetitle> pour
    obtenir les informations sur la configuration des interfaces réseau à
    l'adresse &url.netplan-doc;.</para>
    </question>
    <answer>
    <para>Il existe plusieurs possibilités pour configurer une interface
    réseau. Dans le contexte de ces manipulations, on utilise
    <citetitle>Netplan</citetitle> dans le but de séparer la partie déclarative
    du moteur de configuration.</para>

    <para>C'est <systemitem>systemd-networkd</systemitem> qui joue le rôle de
    moteur de configuration sur les machines virtuelles utilisées avec ces
    manipulations.</para>

    <para>La configuration de base fournie avec l'image maître suppose que
    l'interface obtienne un bail <acronym>DHCP</acronym> pour la partie
    <acronym>IPv4</acronym> et une configuration automatique via
    <acronym>SLAAC</acronym> pour la partie <acronym>IPv6</acronym>. Cette
    configuration par défaut doit être éditée et remplacée. Il faut configurer
    trois interfaces.</para>

    <itemizedlist>
    <listitem>
    <para>L'interface principale correspond à l'interface "physique" de la
    machine. Elle est nommée <systemitem>enp0s1</systemitem> en fonction de
    l'ordre des adresses des composants raccordés au bus
    <acronym>PCI</acronym>.</para>
    </listitem>
    <listitem>
    <para>Une sous-interface doit être créée pour le réseau d'infrastructure
    (<acronym>VLAN</acronym> rouge). Cette interface doit désigner les
    passerelles <acronym>IPv4</acronym> et <acronym>IPv6</acronym> de façon à
    joindre l'Internet.</para>
    </listitem>
    <listitem>
    <para>Une sous-interface doit être créée pour le réseau étendu de
    l'exploitant des fourreaux et du câblage en fibres optiques
    (<acronym>VLAN</acronym> violet). Cette interface ne comprend qu'une
    adresse <acronym>IPv6</acronym> de lien local pour les tests de
    connectivité <acronym>ICMPv6</acronym> entre les deux sites.</para>
    </listitem>
    <listitem>
    <para>Une autre sous-interface doit être créée pour le réseau étendu de
    l'opérateur (<acronym>VLAN</acronym> orange). Cette interface ne contient
    aucune adresse lors de l'initialisation système. C'est le démon
    <command>pppd</command> qui est responsable de l'attribution des adresses
    <acronym>IPv4</acronym> et <acronym>IPv6</acronym> lotrs de l'établissement
    de la session du protocole <acronym>PPP</acronym>.</para>
    </listitem>
    </itemizedlist>

    <para>Voici une copie du fichier
    <filename>/etc/netplan/enp0s1.yaml</filename> de la maquette.</para>

<screen>network:
  version: 2
  ethernets:
    enp0s1:
      dhcp4: false
      dhcp6: false
      accept-ra: false
      nameservers:
        addresses:
          - 172.16.0.2
          - 2001:678:3fc:3::2

  vlans:
    enp0s1.360: # VLAN rouge
      id: 360
      link: enp0s1
      addresses:
        - 192.168.104.130/29
        - 2001:678:3fc:168::82/64
      routes:
        - to: default
          via: 192.168.104.129
        - to: "::/0"
          via: "fe80:168::1"
          on-link: true
    enp0s1.440: # VLAN violet
      id: 440
      link: enp0s1
      addresses:
        - fe80:1b8::1/64
    enp0s1.441: # VLAN orange
      id: 441
      link: enp0s1
      addresses: []</screen>

    <para>Une fois le fichier de configuration en place, il suffit de faire
    appel à la commande <command>netplan</command> pour appliquer les
    changements.</para>

<screen>sudo netplan apply</screen>

    <para>Pour vérifier que l'adressage réseau est correct, on dispose de
    plusieurs solutions. Voici un exemple avec <command>netplan</command> qui
    reprend l'ensemble de la configuration réseau.</para>

<screen>sudo netplan status</screen>

<screen>     Online state: online
    DNS Addresses: 2001:678:3fc:3::2 (compat)
                   172.16.0.2 (compat)
                   2001:678:3fc:3::2 (compat)
       DNS Search: .

●  1: lo ethernet UNKNOWN/UP (unmanaged)
      MAC Address: 00:00:00:00:00:00
        Addresses: 127.0.0.1/8
                   ::1/128

●  2: enp0s1 ethernet UP (networkd: enp0s1)
      MAC Address: b8:ad:ca:fe:00:05 (Red Hat, Inc.)
        Addresses: fe80::baad:caff:fefe:5/64 (link)
    DNS Addresses: 172.16.0.2
                   2001:678:3fc:3::2
           Routes: fe80::/64 metric 256

●  3: enp0s1.441 vlan UP (networkd: enp0s1.441)
      MAC Address: b8:ad:ca:fe:00:05
        Addresses: fe80::baad:caff:fefe:5/64 (link)
           Routes: fe80::/64 metric 256

●  4: enp0s1.440 vlan UP (networkd: enp0s1.440)
      MAC Address: b8:ad:ca:fe:00:05
        Addresses: fe80:1b8::1/64 (link)
                   fe80::baad:caff:fefe:5/64 (link)
           Routes: fe80::/64 metric 256
                   fe80:1b8::/64 metric 256

●  5: enp0s1.360 vlan UP (networkd: enp0s1.360)
      MAC Address: b8:ad:ca:fe:00:05
        Addresses: 192.168.104.130/29
                   2001:678:3fc:168:baad:caff:fefe:5/64 (dynamic, ra)
                   2001:678:3fc:168::82/64 (ra)
                   fe80::baad:caff:fefe:5/64 (link)
    DNS Addresses: 2001:678:3fc:3::2
           Routes: default via 192.168.104.129 (static)
                   192.168.104.128/29 from 192.168.104.130 (link)
                   2001:678:3fc:168::/64 metric 256
                   2001:678:3fc:168::/64 metric 512 (ra)
                   fe80::/64 metric 256
                   default via fe80:168::1 metric 1024 (static)</screen>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Quels sont les tests de connectivité réalisables après
    application de la nouvelle configuration des interfaces
    réseau&nbsp;?</phrase></para>

    <para>Relever l'état des trois interfaces et procédez aux tests
    <acronym>ICMP</acronym> et <acronym>DNS</acronym> en respectant l'ordre des
    couches de la modélisation.</para>
    </question>
    <answer>
    <para>Sans la confirmation que la configuration du serveur de conteneurs
    est prête, c'est du côté hébergement et accès Internet qu'il faut orienter
    les tests. Classiquement, on cherche à joindre la passerelle en premier
    puis l'Internet ensuite via des requêtes <acronym>ICMP</acronym>. Enfin, on
    effectue un test de couche application avec une requête
    <acronym>DNS</acronym>.</para>

<screen>ping -q -c2 192.168.104.129
PING 192.168.104.129 (192.168.104.129) 56(84) bytes of data.

--- 192.168.104.129 ping statistics ---
<emphasis>2 packets transmitted, 2 received, 0% packet loss</emphasis>, time 1002ms
rtt min/avg/max/mdev = 1.501/1.516/1.531/0.015 ms</screen>

<screen>PING 9.9.9.9 (9.9.9.9) 56(84) bytes of data.

--- 9.9.9.9 ping statistics ---
<emphasis>2 packets transmitted, 2 received, 0% packet loss</emphasis>, time 1001ms
rtt min/avg/max/mdev = 49.304/52.098/54.892/2.794 ms</screen>

<screen>ping -q -c2 fe80:168::1%enp0s1.360
PING fe80:168::1%enp0s1.360(fe80:168::1%enp0s1.360) 56 data bytes

--- fe80:168::1%enp0s1.360 ping statistics ---
<emphasis>2 packets transmitted, 2 received, 0% packet loss</emphasis>, time 1000ms
rtt min/avg/max/mdev = 1.459/13.305/25.152/11.846 ms</screen>

<screen>ping -q -c2 2620:fe::fe
PING 2620:fe::fe(2620:fe::fe) 56 data bytes

--- 2620:fe::fe ping statistics ---
<emphasis>2 packets transmitted, 2 received, 0% packet loss</emphasis>, time 1001ms
rtt min/avg/max/mdev = 41.812/42.437/43.063/0.625 ms</screen>

<screen>host quad9.net
quad9.net has address 216.21.3.77
quad9.net has IPv6 address 2620:0:871:9000::77
quad9.net mail is handled by 10 mx4.quad9.net.
quad9.net mail is handled by 20 mx2.quad9.net.
quad9.net mail is handled by 5 mx1.quad9.net.</screen>
    </answer>
    </qandaentry>
	</qandaset>
	</sect2>

	<sect2 xml:id='pppoe.hub.routing'>
		<title>Activation de la fonction routage</title>

	<para>Sans modification de la configuration par défaut, un système
	GNU/Linux n'assure pas la fonction de routage du trafic d'une interface
	réseau à une autre.</para>

	<para>L'activation du routage correspond à un réglage de paramètres du
	sous-système réseau du noyau Linux. L'outil qui permet de consulter et
	modifier les réglages de paramètre sur le noyau est appelé
	<application>sysctl</application>.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
	<para><phrase>Comment activer le routage dans le sous-système réseau du
	noyau Linux&nbsp;?</phrase></para>

    <para>Utiliser la commande <command>sysctl</command> pour effectuer des
    recherches et identifier les paramètres utiles. Par exemple&nbsp;:</para>

<screen>sudo sysctl -a -r ".*forward.*"</screen>

    <para>Il est dorénavant recommandé de créer un fichier de configuration
    spécifique par fonction. C'est la raison pour laquelle on crée un nouveau
    fichier <filename>/etc/sysctl.d/10-routing.conf</filename>.</para>

    <para>Attention ! Il ne faut pas oublier d'appliquer les nouvelles valeurs
    des paramètres de configuration.</para>
    </question>
    <answer>

<screen>cat &lt;&lt; EOF | sudo tee /etc/sysctl.d/10-routing.conf
net.ipv4.ip_forward=1
net.ipv6.conf.all.forwarding=1
net.ipv4.conf.all.log_martians=1
EOF</screen>

    <para>Voici un exemple des résultats obtenus après application des nouveaux
    paramètres.</para>

<screen>sudo sysctl --system</screen>

<screen>* Applique /usr/lib/sysctl.d/10-coredump-debian.conf …
<emphasis>* Applique /etc/sysctl.d/10-routing.conf …</emphasis>
* Applique /usr/lib/sysctl.d/50-default.conf …
* Applique /usr/lib/sysctl.d/50-pid-max.conf …
* Applique /etc/sysctl.conf …
kernel.core_pattern = core
<emphasis>net.ipv4.ip_forward = 1</emphasis>
<emphasis>net.ipv6.conf.all.forwarding = 1</emphasis>
<emphasis>net.ipv4.conf.all.log_martians = 1</emphasis>
kernel.sysrq = 0x01b6
kernel.core_uses_pid = 1
net.ipv4.conf.default.rp_filter = 2
net.ipv4.conf.enp0s1/360.rp_filter = 2
net.ipv4.conf.enp0s1/440.rp_filter = 2
net.ipv4.conf.enp0s1.rp_filter = 2
net.ipv4.conf.lo.rp_filter = 2
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.conf.enp0s1/360.accept_source_route = 0
net.ipv4.conf.enp0s1/440.accept_source_route = 0
net.ipv4.conf.enp0s1.accept_source_route = 0
net.ipv4.conf.lo.accept_source_route = 0
net.ipv4.conf.default.promote_secondaries = 1
net.ipv4.conf.enp0s1/360.promote_secondaries = 1
net.ipv4.conf.enp0s1/440.promote_secondaries = 1
net.ipv4.conf.enp0s1.promote_secondaries = 1
net.ipv4.conf.lo.promote_secondaries = 1
net.ipv4.ping_group_range = 0 2147483647
net.core.default_qdisc = fq_codel
fs.protected_hardlinks = 1
fs.protected_symlinks = 1
fs.protected_regular = 2
fs.protected_fifos = 1
kernel.pid_max = 4194304</screen>
    </answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quelles sont les conditions à réunir pour tester le
	fonctionnement du routage&nbsp;?</phrase></para>

	<para>Rechercher comment utiliser l'analyseur réseau
	<application>tshark</application> pour caractériser l'acheminement du
	trafic d'un réseau à l'autre.</para>
	</question>
	<answer>
	<para>Le plan d'adressage prévoit d'utiliser des préfixes ayant une portée
	locale pour les réseaux de conteneurs. Il n'est donc pas possible de
	passer par une requête <acronym>ICMP</acronym> pour caractériser l'accès
	aux réseaux distants. En effet, l'adresse source n'est pas reconnue par
	l'hôte distant et les routeurs de l'Internet ne disposent d'aucune solution
	pour joindre le réseau des conteneurs.</para>

	<para>Voici un extrait de capture qui montre que le serveur de conteneur
	cherche à joindre un hôte sur l'Internet sans succès. Cette capture étant
	réalisée sur l'interface réseau côté hébergement, elle montre que le trafic
	est bien acheminé d'un réseau à l'autre.</para>

<screen>tshark -i enp0s1.360
Capturing on 'enp0s1.360'
    1 0.000000000    192.0.2.2 → 9.9.9.9      DNS 81 Standard query 0xbdab A 1.debian.pool.ntp.org
    2 0.000056361    192.0.2.2 → 9.9.9.9      DNS 81 Standard query 0xab92 AAAA 1.debian.pool.ntp.org</screen>
	</answer>
	</qandaentry>
	</qandaset>
	</sect2>

	<sect2 xml:id='pppoe.hub.nat'>
		<title>Activation de la traduction d'adresses</title>

	<para>Le résultat de la question ci-dessus montre que les hôtes situés dans
	le réseau des conteneurs ne peuvent pas joindre l'Internet puisque les
	préfixes réseau utilisés ont une portée limitée.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
	<para><phrase>Quels sont les paquets qui fournissent les outils de gestion
	de la traduction d'adresses&nbsp;?</phrase></para>

	<para>Rechercher les paquets relatifs au filtrage et à la gestion des
	règles de pare-feux.</para>

    <para>Dans le contexte des ces manipulations, nous utilisons
    <systemitem>nftables</systemitem> comme outil de gestion du
    filtrage.</para>
	</question>
	<answer>
    <para>C'est la partie outils de l'espace utilisateur qui nous intéresse
    ici.</para>

<screen>apt search ^nftables$
nftables/testing,now 1.1.0-2 amd64  [installé]
  programme de contrôle des règles de filtrage de paquets du projet Netfilter</screen>

<screen>sudo apt -y install nftables</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quelles sont les règles à appliquer pour assurer une
    traduction des adresses sources en sortie sur le réseau d'infrastructure
    (VLAN rouge)&nbsp;?</phrase></para>

    <para>Rechercher dans des exemples de configuration
    <systemitem>nftables</systemitem> avec la fonction
    <literal>MASQUERADE</literal>.</para>
	</question>
	<answer>
    <para>Voici un exemple de création du fichier
    <filename>/etc/nftables.conf</filename> avec le jeu d'instructions qui
    assure la traduction d'adresses sources pour <acronym>IPv4</acronym> et
    <acronym>IPv6</acronym>.</para>

<screen>cat &lt;&lt; EOF | sudo tee /etc/nftables.conf
#!/usr/sbin/nft -f

flush ruleset

# Define variables
define RED_VLAN = <emphasis>enp0s1.360</emphasis>

table inet nat {
    chain postrouting {
        type nat hook postrouting priority 100;
        oifname $RED_VLAN packets 0 bytes 0 masquerade
    }
}
EOF</screen>

    <warning>
    <para>Il faut impérativement changer le nom d'interface en utilisant le
    numéro de <acronym>VLAN</acronym> attribué dans le plan d'adressage des
    travaux pratiques.</para>
    </warning>

	<para>La création de ce fichier de règles n'est pas suffisante. Il faut
	appliquer les règles contenues dans le fichier.</para>

<screen>sudo nft -f /etc/nftables.conf</screen>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment rendre le chargement des règles de filtrage
    automatique au redémarrage du système&nbsp;?</phrase></para>

    <para>Afficher l'état du service <systemitem>nftables.service</systemitem>.
    Activer ce service si celui est à l'état désactivé
    (<wordasword>disabled</wordasword>).</para>
    </question>
    <answer>
    <para>Pour afficher l'état du service, on utilise la commande suivante.</para>

<screen>systemctl status nftables.service</screen>

    <para>On constate qu'il faut activer ce service pour assurer le chargement
    automatique des règles de filtrage au démarrage.</para>

<screen>sudo systemctl enable nftables.service
sudo systemctl start nftables.service
sudo systemctl status nftables.service</screen>

<screen>Created symlink '/etc/systemd/system/sysinit.target.wants/nftables.service' → '/usr/lib/systemd/system/nftables.service'.
● nftables.service - nftables
     Loaded: loaded (/usr/lib/systemd/system/nftables.service; enabled; preset: enabled)
     Active: active (exited) since Wed 2024-09-18 19:47:08 CEST; 38ms ago
 Invocation: 91e0edd0be824dd89b4f9bed0bef6fce
       Docs: man:nft(8)
             http://wiki.nftables.org
    Process: 1066 ExecStart=<emphasis>/usr/sbin/nft -f /etc/nftables.conf (code=exited, status=0/SUCCESS)</emphasis>
   Main PID: 1066 (code=exited, status=0/SUCCESS)
   Mem peak: 3.9M
        CPU: 31ms

sept. 18 19:47:07 hub systemd[1]: Starting nftables.service - nftables...
sept. 18 19:47:08 hub systemd[1]: Finished nftables.service - nftables.</screen>
    </answer>
    </qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment caractériser le fonctionnement de la traduction
	d'adresses sources&nbsp;?</phrase></para>

    <para>Rechercher dans les pages de manuel de la commande
    <command>nftables</command> les options d'affichage du décompte du trafic
    traité.</para>
	</question>
	<answer>
    <para>Voici un exemple d'affichage des règles actives avec visualisation
    des compteurs d'utilisation.</para>

<screen>sudo nft list ruleset</screen>

<screen>table ip nat {
        chain postrouting {
                type nat hook postrouting priority srcnat; policy accept;
                oifname "enp0s1.360" <emphasis>counter packets 0 bytes 0 masquerade</emphasis>
        }
}
table ip6 nat {
        chain postrouting {
                type nat hook postrouting priority srcnat; policy accept;
                oifname "enp0s1.360" <emphasis>counter packets 0 bytes 0 masquerade</emphasis>
        }
}</screen>
	</answer>
	</qandaentry>
	</qandaset>
	</sect2>

	<sect2 xml:id='pppoe.hub.pppoe'>
		<title>Activation du service PPPoE</title>

    <para>Dans le scénario de ces travaux pratiques, il est	nécessaire de
    passer par une authentification pour acheminer le trafic réseau entre les
    routeurs <citetitle>Hub</citetitle> et <citetitle>Spoke</citetitle>. Cette
    fonction est assurée à l'aide du protocole <acronym>PPP</acronym>.</para>

    <para>Le protocole <acronym>PPP</acronym> n'a pas été conçu suivant le
    modèle client/serveur mais pair à pair. Il suppose que deux les processus
    pairs de la liaison point à point échangent des informations, dont
    l'authentification mutuelle.</para>

    <para>Dans notre cas, le routeur qui tient le rôle
    <citetitle>Hub</citetitle> joue le rôle de serveur dans le sens où il exige
    que le routeur avec le rôle <citetitle>Spoke</citetitle> s'authentifie
    auprès de lui avant de fournir les adresses de couche réseau.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
	<para><phrase>Quel paquet spécifique à la gestion du dialogue
	<acronym>PPPoE</acronym> à installer sur le routeur
	<wordasword>Hub</wordasword>&nbsp;?</phrase></para>

	<para>Rechercher dans le catalogue des paquets, la référence
	<acronym>pppoe</acronym>.</para>
	</question>
	<answer>
<screen>apt search ^pppoe</screen>

<screen>pppoe/testing 4.0-1 amd64
  Pilote PPP sur Ethernet</screen>

    <para>Le résultat de la commande
    <command>apt&nbsp;show&nbsp;pppoe</command> montre que c'est bien ce paquet
    qui répond au besoin. On peut donc l'installer.</para>

<screen>sudo apt -y install pppoe</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
    <para><phrase>Quel est l'outil contenu dans le paquet demandé à la question
    précédente qui assure le rôle de serveur
    <acronym>PPPoE</acronym>&nbsp;?</phrase></para>

    <para>Rechercher dans la liste des outils fournis avec le paquet et les
    pages de manuels.</para>
	</question>
	<answer>
	<para>L'outil <command>pppoe-server</command> gère directement
	l'encapsulation des trames <acronym>PPP</acronym> dans les trames Ethernet.
	Il communique ensuite les paramètres utiles au démon
	<application>pppd</application> qui fonctionne de façon totalement
	transparente vis-à-vis de la technologie du réseau sous-jacent.</para>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quels sont les noms des deux sous-couches du protocole
	<acronym>PPP</acronym> qui apparaissent dans les journaux
	systèmes&nbsp;?</phrase></para>

	<para>Quels sont les rôles respectifs de ces deux
	sous-couches&nbsp;?</para>

	<para>Consulter la page &url.ppp-wikipedia;.</para>
	</question>
	<answer>
	<para>La consultation des journaux système lors du dialogue
	<acronym>PPP</acronym> fait apparaître des informations du type
	suivant.</para>

	<para>La <xref linkend='pppoe.trace' /> montre en détails
	les différentes phases de l'établissement de la session
	<acronym>PPP</acronym>.</para>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quels sont les en-têtes du dialogue qui identifient les
	requêtes (émises|reçues), les rejets et les
	acquittements&nbsp;?</phrase></para>

	<para>Consulter les journaux système contenant les traces d'une connexion
	<acronym>PPP</acronym>.</para>
	</question>
	<answer>
	<para>La copie d'écran donnée ci-dessus fait apparaître les directives
	<literal>Conf*</literal> pour chaque paramètre négocié.</para>

	<itemizedlist>
	<listitem>
		<para><literal>ConfReq</literal> indique une requête.</para>
	</listitem>
	<listitem>
		<para><literal>ConfAck</literal> indique un acquittement.</para>
	</listitem>
	<listitem>
		<para><literal>ConfNak</literal> indique un rejet.</para>
	</listitem>
	</itemizedlist>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
    <para><phrase>Dans quel fichier sont stockés les paramètres d'identité et
    d'authentification utilisés par le protocole <acronym>EAP</acronym> pour la
    méthode <acronym>CHAP</acronym>&nbsp;?</phrase></para>

	<para>Consulter les pages de manuels du démon <command>pppd</command> à la
	section <citetitle>AUTHENTICATION</citetitle>.</para>
	</question>
	<answer>
	<para>C'est le fichier <filename>/etc/ppp/chap-secrets</filename> qui
	contient les couples <wordasword>login/password</wordasword> utilisés lors
	de l'authentification.</para>

	<para>Voici un exemple du contenu de ce fichier.</para>

<screen># Secrets for authentication using CHAP
# client    	server	secret			IP addresses
"spoke_site0"   *		"5p0k3"			*
</screen>

    <para>On peut le compléter directement à l'aide de la commande
    suivante.</para>

<screen>echo '"spoke_site0"   *       "5p0k3"   *' | sudo tee -a /etc/ppp/chap-secrets</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Dans quel fichier sont stockés les paramètres passés au démon
	<command>pppd</command> lors du lancement du serveur
	<acronym>PPPoE</acronym>&nbsp;?</phrase></para>

	<para>Consulter les pages de manuels de l'outil
	<command>pppoe-server</command>.</para>
	</question>
	<answer>
	<para>C'est le fichier <filename>/etc/ppp/pppoe-server-options</filename>
	qui contient la liste des paramètres utilisés lors du dialogue
	<acronym>PPP</acronym>.</para>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quelles sont les options du protocole <acronym>PPP</acronym>
	qui doivent être implantées dans le fichier demandé à la question
	précédente&nbsp;?</phrase></para>

	<para>Consulter les pages de manuels du démon <command>pppd</command> et
	rechercher les paramètres correspondant à la liste suivante.</para>

	<itemizedlist>
	<listitem>
		<para>Afficher en détail toutes les étapes d'établissement de session
		dans les journaux système.</para>
	</listitem>
	<listitem>
		<para>Référencer l'identifiant du compte utilisateur à utiliser lors de
		l'authentification du routeur vert. Cette option implique que le compte
		utilisateur existe sur le système et qu'il soit présent dans le fichier
		<filename>/etc/ppp/chap-secrets</filename>.</para>
	</listitem>
	<listitem>
        <para>Imposer au routeur vert une authentification via
        <acronym>EAP</acronym> (<wordasword>Extensible Authentication
        Protocol</wordasword>) sans utiliser les certificats
        <acronym>TLS</acronym> pour simplifier la configuration.</para>
	</listitem>
	<listitem>
		<para>Préserver la route par défaut, et donc l'accès Internet, du
		routeur bleu.</para>
	</listitem>
	<listitem>
		<para>Publier l'adresse <acronym>IP</acronym> du serveur
		<acronym>DNS</acronym> à utiliser pour la résolution des noms de
		domaines.</para>
	</listitem>
	<listitem>
		<para>Activer l'utilisation des protocoles <acronym>IPv6CP</acronym> et
		<acronym>IPv6</acronym>.</para>
	</listitem>
	</itemizedlist>
	</question>
	<answer>
	<para>Voici une copie de la commande de création du fichier
	<filename>/etc/ppp/pppoe-server-options</filename> qui contient la liste
	des paramètres demandés.</para>

<screen>cat &lt;&lt; 'EOF' | sudo tee /etc/ppp/pppoe-server-options
# Gestion de session avec PAM
login
# Authentification EAP
require-eap
# Le Routeur Hub détient déjà une route par défaut
nodefaultroute
# Envoi de l'adresse de résolution DNS avec les adresses IPv4
ms-dns 172.16.0.2
# Ajout du protocole IPv6
+ipv6
# Informations détaillées dans la journalisation
debug
# Options préconisées par la documentation
noaccomp
default-asyncmap
nodeflate
nopcomp
novj
novjccomp
lcp-echo-interval 10
EOF</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment créer le compte utilisateur local sur le routeur bleu
	sachant qu'il n'est autorisé ni à se connecter ni à avoir un répertoire
	personnel&nbsp;?</phrase></para>

	<para>Consulter les options de la commande
	<command>adduser</command>.</para>
	</question>
	<answer>
	<para>Voici un exemple de commande <command>adduser</command>.</para>

<screen>sudo adduser --gecos 'Spoke Router site0' --disabled-login --no-create-home spoke_site0</screen>

    <warning>
    <para>Cet utilisateur doit porter le même nom que celui défini dans le
    fichier <filename>/etc/ppp/chap-secrets</filename>.</para>
    </warning>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quels sont les paramètres à donner au lancement de l'outil
	<command>pppoe-server</command> pour qu'il délivre les adresses au routeur
	vert après authentification de celui-ci&nbsp;?</phrase></para>

	<para>Consulter les options de la commande
	<command>pppoe-server</command>.</para>
	</question>
	<answer>
	<para>Voici un exemple de lancement manuel de la commande <command>pppoe-server</command>.</para>

<screen>sudo pppoe-server -I enp0s1.441 -C BRAS -L 10.4.41.1 -R 10.4.41.2 -N 1</screen>

    <para>Cette commande individuelle est à utiliser pour faire un tout premier
    test. Pour rendre la configuration persistante au redémarrage nous avons
    besoin de créer un service <application>systemd</application>. Il ne faut
    donc pas oublier d'arrêter le processus avant de passer à la question
    suivante.</para>

<screen>sudo killall pppoe-server</screen>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment créer une nouvelle unité
    <application>systemd</application> responsable du lancement du processus
    <command>pppoe-server</command>&nbsp;?</phrase></para>

    <para>Consulter la page &url.debian-systemd; et rechercher la procédure à
    suivre pour ajouter un service au lancement du système.</para>
    </question>
    <answer>
    <para>On commence par la création du fichier de service appelé&nbsp;:
    <filename>/etc/systemd/system/pppoe-server.service</filename> qui contient
    toutes les directives de lancement du processus
    <command>pppoe-server</command> avec les paramètres d'adressage du lien
    point à point.</para>

    <para>Dans l'exemple ci-dessous, les paramètres suivants doivent être
    édités pour respecter le plan d'adressage défini.</para>
    <variablelist>
    <varlistentry>
    <term>-I</term>
    <term>Nom d'interface réseau</term>
    <listitem>
    <para>Le nom d'interface réseau contient l'identifiant du VLAN sur lequel
    la session <acronym>PPP</acronym> doit être établie.</para>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>-L</term>
    <term>Adresse locale</term>
    <listitem>
    <para>L'adresse locale correspond à l'adresse attribuée au routeur
    <citetitle>Hub</citetitle> par le démon <command>pppd</command>.</para>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>-R</term>
    <term>Adresse distante</term>
    <listitem>
    <para>L'adresse distante correspond à l'adresse attribuée au routeur
    <citetitle>Spoke</citetitle> par le démon <command>pppd</command> après
    authentification.</para>
    </listitem>
    </varlistentry>
    </variablelist>

    <para>Voici un exemple de création du fichier d'unité
    <application>systemd</application>.</para>

<screen>cat &lt;&lt; 'EOF' | sudo tee /etc/systemd/system/pppoe-server.service
[Unit]
Description=PPPoE Server
After=systemd-networkd.service
Wants=systemd-networkd.service
BindsTo=sys-subsystem-net-devices-<emphasis>enp0s1.441</emphasis>.device
After=sys-subsystem-net-devices-<emphasis>enp0s1.441</emphasis>.device

[Service]
Type=forking
ExecCondition=/bin/sh -c '[ "$(systemctl show --property MainPID --value pppoe-server.service)" = "0" ]'
ExecCondition=/bin/sh -c '[ -z "$(pgrep pppoe-server)" ]'
ExecStart=/usr/sbin/pppoe-server -I <emphasis>enp0s1.441</emphasis> -C BRAS -L <emphasis>10.4.41.1</emphasis> -R <emphasis>10.4.41.2</emphasis> -N 1
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF</screen>
    </answer>
    </qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment activer le nouveau service et contrôler son état
    après lancement&nbsp;?</phrase></para>

    <para>Consulter la page &url.debian-systemd; et rechercher la procédure à
    suivre pour activer et lancer un service.</para>
    </question>
    <answer>
    <para>On commence par la relecture de la liste des services disponibles par
    le gestionnaire <application>systemd</application>.</para>

<screen>sudo systemctl daemon-reload</screen>

    <para>On active le nouveau service.</para>

<screen>sudo systemctl enable pppoe-server.service</screen>

    <para>On lance ce nouveau service.</para>

<screen>sudo systemctl start pppoe-server.service</screen>

    <para>On vérifie que l'opération s'est déroulée correctement.</para>

<screen>systemctl status pppoe-server.service</screen>

<screen>● pppoe-server.service - PPPoE Server
     Loaded: loaded (/etc/systemd/system/pppoe-server.service; <emphasis>enabled</emphasis>; preset: enabled)
     Active: <emphasis>active (running)</emphasis> since Sat 2024-09-21 15:39:39 CEST; 36min ago
 Invocation: 23332f16c26f4889a9f063870e77da9c
    Process: 2958 ExecCondition=/bin/sh -c [ "$(systemctl show --property MainPID --value pppoe-server.service)" = "0" ] (code=exited, status=0/SUCCESS)
    Process: 2960 ExecCondition=/bin/sh -c [ -z "$(pgrep pppoe-server)" ] (code=exited, status=0/SUCCESS)
    Process: 2964 ExecStart=/usr/sbin/pppoe-server -I enp0s1.441 -C BRAS -L 10.4.41.1 -R 10.4.41.2 -N 1 (code=exited, status=0/SUCCESS)
   Main PID: 2966 (pppoe-server)
      Tasks: 1 (limit: 1086)
     Memory: 208K (peak: 1.8M)
        CPU: 67ms
     CGroup: /system.slice/pppoe-server.service
             └─<emphasis>2966 /usr/sbin/pppoe-server -I enp0s1.441 -C BRAS -L 10.4.41.1 -R 10.4.41.2 -N 1</emphasis>

sept. 21 15:39:39 hub systemd[1]: Starting pppoe-server.service - PPPoE Server...
sept. 21 15:39:39 hub systemd[1]: Started pppoe-server.service - PPPoE Server.</screen>

    <para>la copie d'écran ci-dessus montre que le service
    <command>pppoe-server</command> est lancé avec le jeu de paramètres de la
    maquette.</para>

    <para>En l'état actuel de la configuration, aucune session
    <acronym>PPP</acronym> n'a encore été établie. Il faut maintenant passer à
    la configuration réseau du routeur <citetitle>Spoke</citetitle> pour
    avancer dans l'utilisation du protocole <acronym>PPP</acronym>.</para>
    </answer>
    </qandaentry>
	</qandaset>
	</sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='pppoe.spoke'>
	<title>Routeur Spoke</title>

    <para>Dans cette section, on étudie la machine virtuelle qui joue le rôle
    de routeur entre le réseau étendu (VLANs violet et orange) et le réseau
    d'hébergement des conteneurs (VLAN vert) du site distant.</para>

	<sect2 xml:id='pppoe.spoke.interfaces'>
		<title>Configuration des interfaces du routeur</title>

	<para>Une fois la machine virtuelle serveur de conteneurs lancée, les
	premières étapes consistent à lui attribuer un nouveau nom et à configurer
	les interfaces réseau pour joindre le routeur voisin et l'Internet.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
	<para><phrase>Comment changer le nom de la machine
	virtuelle&nbsp;?</phrase></para>
	</question>
	<answer>
	<para>Il faut éditer les deux fichiers <filename>/etc/hosts</filename> et
	<filename>/etc/hostname</filename> en remplaçant le nom de l'image
	maître <citetitle>vm0</citetitle> par le nom voulu. Il est ensuite
	nécessaire de redémarrer pour que le nouveau nom soit pris en compte par
	tous les outils du système.</para>

<screen><prompt>etu@localhost:~$</prompt> echo spoke | sudo tee /etc/hostname
<prompt>etu@localhost:~$</prompt> sudo reboot</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
    <para><phrase>Comment appliquer les configurations réseau
    <acronym>IPv4</acronym> et <acronym>IPv6</acronym> à partir de l'unique
    interface du routeur&nbsp;?</phrase></para>

    <para>Consulter la documentation de <citetitle>Netplan</citetitle> pour
    obtenir les informations sur la configuration des interfaces réseau à
    l'adresse &url.netplan-doc;.</para>
    </question>
    <answer>
    <para>Il existe plusieurs possibilités pour configurer une interface
    réseau. Dans le contexte de ces manipulations, on utilise
    <citetitle>Netplan</citetitle> dans le but de séparer la partie déclarative
    du moteur de configuration.</para>

    <para>C'est <systemitem>systemd-networkd</systemitem> qui joue le rôle de
    moteur de configuration sur les machines virtuelles utilisées avec ces
    manipulations.</para>

    <para>La configuration de base fournie avec l'image maître suppose que
    l'interface obtienne un bail <acronym>DHCP</acronym> pour la partie
    <acronym>IPv4</acronym> et une configuration automatique via
    <acronym>SLAAC</acronym> pour la partie <acronym>IPv6</acronym>. Cette
    configuration par défaut doit être éditée et remplacée. Il faut configurer
    trois interfaces.</para>

    <itemizedlist>
    <listitem>
    <para>L'interface principale correspond à l'interface "physique" de la
    machine. Elle est nommée <systemitem>enp0s1</systemitem> en fonction de
    l'ordre des adresses des composants raccordés au bus
    <acronym>PCI</acronym>.</para>
    </listitem>
    <listitem>
    <para>Une sous-interface doit être créée pour le réseau étendu de
    l'exploitant des fourreaux et du câblage en fibres optiques
    (<acronym>VLAN</acronym> violet). Cette interface ne comprend qu'une
    adresse <acronym>IPv6</acronym> de lien local pour les tests de
    connectivité <acronym>ICMPv6</acronym> entre les deux sites.</para>
    </listitem>
    <listitem>
    <para>Une autre sous-interface doit être créée pour le réseau étendu de
    l'opérateur (<acronym>VLAN</acronym> orange). Cette interface ne contient
    aucune adresse lors de l'initialisation système. C'est le démon
    <command>pppd</command> qui est responsable de l'attribution des adresses
    <acronym>IPv4</acronym> et <acronym>IPv6</acronym> lotrs de l'établissement
    de la session du protocole <acronym>PPP</acronym>.</para>
    </listitem>
    <listitem>
    <para>Une sous-interface temporaire doit être créée dans le but d'installer
    les paquets d'outils nécessaires à l'établissement de la session du
    protocole <acronym>PPP</acronym>. Dès que la configuration de session
    <acronym>PPP</acronym> est en place, cette interface doit être détruite
    pour éviter toute confusion sur l'acheminement du trafic.</para>
    </listitem>
    <listitem>
    <para>Une sous-interface devra être créée par la suite pour le réseau
    d'hébergement des conteneurs avec, là encore, le bon numéro de
    <acronym>VLAN</acronym>. Les adresses <acronym>IPv4</acronym> et
    <acronym>IPv6</acronym> de cette interface deviendront les passerelles du
    serveur et des conteneurs.</para>
    </listitem>
    </itemizedlist>

    <para>Voici une copie du fichier
    <filename>/etc/netplan/enp0s1.yaml</filename> de la maquette.</para>

<screen>network:
  version: 2
  ethernets:
    enp0s1:
      dhcp4: false
      dhcp6: false
      accept-ra: false
      nameservers:
        addresses:
          - 172.16.0.2
          - 2001:678:3fc:3::2

  vlans:
    enp0s1.440: # VLAN violet
      id: 440
      link: enp0s1
      addresses:
        - fe80:1b8::2/64
    enp0s1.441: # VLAN orange
      id: 441
      link: enp0s1
      addresses: []
    enp0s1.52: # VLAN accès temporaire
      id: 52
      link: enp0s1
      dhcp4: true
      dhcp6: false
      accept-ra: true</screen>
	</answer>
	</qandaentry>
	</qandaset>
	</sect2>

	<sect2 xml:id='pppoe.spoke.routing'>
		<title>Activation de la fonction routage</title>

	<para>Sans modification de la configuration par défaut, un système
	GNU/Linux n'assure pas la fonction de routage du trafic d'une interface
	réseau à une autre.</para>

	<para>L'activation du routage correspond à un réglage de paramètres du
	sous-système réseau du noyau Linux. L'outil qui permet de consulter et
	modifier les réglages de paramètre sur le noyau est appelé
	<application>sysctl</application>.</para>

    <para>On retrouve ici les mêmes opérations que celles effectuées sur le
    routeur qui tient le rôle <citetitle>Hub</citetitle>.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
	<para><phrase>Comment activer le routage dans le sous-système réseau du
	noyau Linux&nbsp;?</phrase></para>

    <para>Utiliser la commande <command>sysctl</command> pour effectuer des
    recherches et identifier les paramètres utiles. Par exemple&nbsp;:</para>

<screen>sudo sysctl -a -r ".*forward.*"</screen>

    <para>Il est dorénavant recommandé de créer un fichier de configuration
    spécifique par fonction.  C'est la raison pour laquelle on crée un nouveau
    fichier <filename>/etc/sysctl.d/10-routing.conf</filename>.</para>

    <para>Attention ! Il ne faut pas oublier d'appliquer les nouvelles valeurs
    des paramètres de configuration.</para>
    </question>
    <answer>

<screen>cat &lt;&lt; EOF | sudo tee /etc/sysctl.d/10-routing.conf
net.ipv4.ip_forward=1
net.ipv6.conf.all.forwarding=1
net.ipv4.conf.all.log_martians=1
EOF</screen>

    <para>Voici un exemple des résultats obtenus après application des nouveaux
    paramètres.</para>

<screen>sudo sysctl --system</screen>
    </answer>
	</qandaentry>
	</qandaset>
	</sect2>

	<sect2 xml:id='pppoe.spoke.ppp'>
		<title>Activation du protocole PPP</title>

    <para>Le routeur <citetitle>Spoke</citetitle> doit utiliser un démon
    <application>pppd</application> sur le <acronym>VLAN</acronym>
    <option>Data</option> (orange) pour établir une session
    <acronym>PPP</acronym> avec le routeur <citetitle>Hub</citetitle>. À la
    différence de ce dernier, il n'est pas à l'initiative du dialogue
    <acronym>PPPoE</acronym> mais il doit être capable de gérer l'encapsulation
    des trames <acronym>PPP</acronym> sur un réseau local Ethernet.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
    <para><phrase>Quel paquet fournit le démon de gestion des sessions du
    protocole <acronym>PPP</acronym> sur le routeur
    <citetitle>Spoke</citetitle>&nbsp;?</phrase></para>

	<para>Rechercher dans le catalogue des paquets, la référence
	<acronym>ppp</acronym>.</para>
	</question>
	<answer>
<screen>apt search ^ppp</screen>

<screen><emphasis>ppp</emphasis>/testing 2.5.0-1+2 amd64
  protocole point à point (PPP) - démon

ppp-dev/testing 2.5.0-1+2 all
  protocole point à point (PPP) – fichiers de développement

ppp-gatekeeper/testing 0.1.0-201406111015-1.1 all
  PPP manager for handling balanced, redundant and failover links

pppoe/testing 4.0-1 amd64
  Pilote PPP sur Ethernet

pppoeconf/testing 1.21+nmu3 all
  configures PPPoE/ADSL connections

wmppp.app/testing 1.3.2-2 amd64
  contrôle de connexion et surveillance de la charge réseau avec aspect NeXTStep</screen>

	<para>Le résultat de la commande <command>apt show ppp</command>
	montre que c'est bien ce paquet qui répond au besoin.</para>

<screen>sudo apt -y install ppp</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment utiliser l'encapsulation des trames
	<acronym>PPP</acronym> dans Ethernet à partir du démon
	<command>pppd</command> fourni avec le paquet
	<application>ppp</application>&nbsp;?</phrase></para>

	<para>Rechercher dans le répertoire de documentation du paquet
	<application>ppp</application>.</para>
	</question>
	<answer>
	<para>Dans le répertoire <filename
	class='directory'>/usr/share/doc/ppp/</filename>, on trouve le fichier
	<filename>README.pppoe</filename> qui indique que l'appel au module
	<filename>rp-pppoe.so</filename> permet d'encapsuler des trames
	<acronym>PPP</acronym> sur un réseau local Ethernet.</para>

	<para>Toujours à partir du même répertoire, on trouve dans la liste des
	fichiers d'exemples de configuration un modèle adapté à notre
	contexte&nbsp;: <filename>peers-pppoe</filename>.</para>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Dans quel fichier sont stockés les paramètres d'identité et
	d'authentification utilisés par le protocole
	<acronym>CHAP</acronym>&nbsp;?</phrase></para>

	<para>Consulter les pages de manuels du démon <command>pppd</command> à la
	section <citetitle>AUTHENTICATION</citetitle>.</para>
	</question>
	<answer>
	<para>C'est le fichier <filename>/etc/ppp/chap-secrets</filename> qui
	contient les couples <wordasword>login/password</wordasword> utilisés lors
	de l'authentification.</para>

	<para>Voici un exemple du contenu de ce fichier. Le nom du client ainsi que
	son mot de passe secret doivent être identiques à chaque extrémité de la
	session <acronym>PPP</acronym>.</para>

<screen># Secrets for authentication using CHAP
# client	server	secret			IP addresses
"spoke_site0"   *		"5p0k3"			*
</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quelles sont les options de configuration du démon
	<command>pppd</command> à placer dans le fichier
	<filename>/etc/ppp/peers/pppoe-provider</filename> pour assurer
	l'établissement de la session <acronym>PPP</acronym> entre les
	routeurs&nbsp;?</phrase></para>

	<para>Utiliser le fichier exemple <acronym>PPPoE</acronym> fourni avec la
	documentation du paquet <application>ppp</application>.</para>
	</question>
	<answer>
	<para>Voici comment créer un fichier
	<filename>/etc/ppp/peers/pppoe-provider</filename> avec les options
	correspondant au contexte de la maquette du routeur vert.</para>

<screen>cat &lt;&lt; 'EOF' | sudo tee /etc/ppp/peers/pppoe-provider
# Le nom d'utilisateur désigne l'entrée du fichier /etc/ppp/chap-secrets
user <emphasis>spoke_site0</emphasis>

# Chargement du module PPPoE avec les détails dans la journalisation
plugin rp-pppoe.so rp_pppoe_ac BRAS rp_pppoe_verbose 1

# Interface (VLAN) utilisé pour l'établissement de la session PPP
<emphasis>enp0s1.441</emphasis>

# Les adresses sont attribuées par le "serveur" PPPoE
noipdefault
# L'adresse de résolution DNS est aussi fournie par le serveur PPPoE
usepeerdns
# La session PPP devient la route par défaut du routeur Spoke
defaultroute

# Demande de réouverture de session automatique en cas de rupture
persist

# Le routeur Spoke n'exige pas que le routeur Hub s'authentifie
noauth

# Messages d'informations détaillés dans la journalisation
debug

# Utilisation du protocole IPv6
+ipv6

# Options préconisées par la documentation
noaccomp
default-asyncmap
nodeflate
nopcomp
novj
novjccomp
lcp-echo-interval 10
EOF</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment lancer le démon <command>pppd</command> pour qu'il
	prenne en compte les paramètres définis dans le fichier complété à la
	question précédente&nbsp;?</phrase></para>

	<para>Consulter les pages de manuels du démon
	<command>pppd</command>.</para>
	</question>
	<answer>
	<para>C'est l'outil <command>pon</command> qui permet de désigner le
	fichier de configuration à utiliser. Voici une copie d'écran du lancement
	du démon <command>pppd</command>.</para>

<screen>sudo pon pppoe-provider</screen>

    <para>Cette commande individuelle est à utiliser pour faire un tout premier
    test. Pour rendre la configuration persistante au redémarrage nous avons
    besoin de créer un service <application>systemd</application>. Il ne faut
    donc pas oublier d'arrêter le processus avant de passer à la question
    suivante. Le paquet fournit un outil dédié&nbsp;:
    <command>poff</command>.</para>

<screen>sudo poff -a pppoe-provider</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quels sont les noms des deux sous-couches du protocole
	<acronym>PPP</acronym> qui apparaissent dans les journaux
	systèmes&nbsp;?</phrase> Quels sont les rôles respectifs de ces deux
	sous-couches&nbsp;?</para>

	<para>Consulter la page &url.ppp-wikipedia;.</para>
	</question>
	<answer>
	<para>La consultation des journaux système lors du dialogue
	<acronym>PPP</acronym> fait apparaître tous les détails. Voir la <xref
	linkend='pppoe.trace' />.</para>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Quels sont les en-têtes du dialogue qui identifient les
	requêtes (émises|reçues), les rejets et les
	acquittements&nbsp;?</phrase></para>

	<para>Consulter les journaux système contenant les traces d'une connexion
	<acronym>PPP</acronym>.</para>
	</question>
	<answer>
	<para>La copie d'écran donnée ci-dessus fait apparaître les directives
	<literal>Conf*</literal> pour chaque paramètre négocié.</para>
	<itemizedlist> <listitem>
		<para><literal>ConfReq</literal> indique une requête.</para>
	</listitem>
	<listitem>
		<para><literal>ConfAck</literal> indique un acquittement.</para>
	</listitem>
	<listitem>
		<para><literal>ConfNak</literal> indique un rejet.</para>
	</listitem>
	</itemizedlist>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
    <para><phrase>Comment assurer une ouverture automatique de la session
    <acronym>PPP</acronym> à chaque réinitialisation
    système&nbsp;?</phrase></para>

    <para>Consulter la page &url.debian-systemd; et rechercher la procédure à
    suivre pour ajouter un service au lancement du système.</para>
    </question>
    <answer>
    <para>On commence par la création du fichier de service appelé&nbsp;:
    <filename>/etc/systemd/system/ppp.service</filename> qui contient les
    appels aux outils <command>pon</command> et <command>poff</command>.</para>

    <para>Voici l'instruction de création du fichier de service.</para>

<screen>cat &lt;&lt; EOF | sudo tee /etc/systemd/system/ppp.service
[Unit]
Description=PPPoE Client Connection
After=network.target
Wants=network.target
BindsTo=sys-subsystem-net-devices-<emphasis>enp0s1.441</emphasis>.device
After=sys-subsystem-net-devices-<emphasis>enp0s1.441</emphasis>.device

[Service]
Type=forking
ExecStart=/usr/bin/pon pppoe-provider
ExecStop=/usr/bin/poff pppoe-provider
Restart=on-failure
RestartSec=20

[Install]
WantedBy=multi-user.target
EOF</screen>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment activer le nouveau service et contrôler son état
    après lancement&nbsp;?</phrase></para>

    <para>Consulter la page &url.debian-systemd; et rechercher la procédure à
    suivre pour activer et lancer un service.</para>
    </question>
    <answer>
    <para>On commence par la relecture de la liste des services disponibles par
    le gestionnaire <application>systemd</application>.</para>

<screen>sudo systemctl daemon-reload</screen>

    <para>On active le nouveau service.</para>

<screen>sudo systemctl enable ppp.service</screen>

    <para>On lance ce nouveau service.</para>

<screen>sudo systemctl start ppp.service</screen>

    <para>On vérifie que l'opération s'est déroulée correctement.</para>

<screen>systemctl status ppp.service</screen>

<screen>● ppp.service - PPPoE Client Connection
     Loaded: loaded (/etc/systemd/system/ppp.service; enabled; preset: enabled)
     Active: <emphasis>active (running)</emphasis> since Sun 2024-09-22 08:21:32 CEST; 13min ago
 Invocation: 69386a40f7574821b3986ed6c6c242f7
   Main PID: 496 (pppd)
      Tasks: 1 (limit: 1086)
     Memory: 2.8M (peak: 4.9M)
        CPU: 56ms
     CGroup: /system.slice/ppp.service
             └─496 /usr/sbin/pppd call pppoe-provider

sept. 22 08:21:37 spoke pppd[496]: rcvd [IPCP ConfAck id=0x2 &lt;addr 10.4.41.2> &lt;ms-dns1 172.16.0.2> &lt;ms-dns2 172.16.0.2>]
sept. 22 08:21:37 spoke pppd[496]: Script /etc/ppp/ip-pre-up started (pid 510)
sept. 22 08:21:37 spoke pppd[496]: Script /etc/ppp/ip-pre-up finished (pid 510), status = 0x0
sept. 22 08:21:37 spoke pppd[496]: <emphasis>local  IP address 10.4.41.2</emphasis>
sept. 22 08:21:37 spoke pppd[496]: <emphasis>remote IP address 10.4.41.1</emphasis>
sept. 22 08:21:37 spoke pppd[496]: <emphasis>primary   DNS address 172.16.0.2</emphasis>
sept. 22 08:21:37 spoke pppd[496]: <emphasis>secondary DNS address 172.16.0.2</emphasis>
sept. 22 08:21:37 spoke pppd[496]: Script /etc/ppp/ip-up started (pid 514)
sept. 22 08:21:37 spoke pppd[496]: Script /etc/ppp/ipv6-up finished (pid 509), status = 0x0
sept. 22 08:21:37 spoke pppd[496]: Script /etc/ppp/ip-up finished (pid 514), status = 0x0</screen>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment utiliser la session <acronym>PPP</acronym> (le
    <acronym>VLAN</acronym> orange) comme lien unique de raccordement réseau du
    routeur <citetitle>Spoke</citetitle>&nbsp;?</phrase></para>

    <para>Maintenant que le fonctionnement de la session <acronym>PPP</acronym>
    est validé, nous n'avons plus besoin du raccordement temporaire sur le
    routeur <citetitle>Spoke</citetitle>. Il faut donc commenter les entrées du
    fichier <filename>/etc/netplan/enp0s1.yaml</filename> qui ne sont plus
    utiles et attribuer l'adresse de résolution <acronym>DNS</acronym> de
    secours.</para>

    <para>Une fois ces opérations effectuées, on peut redémarre le routeur
    <citetitle>Spoke</citetitle> pour se placer en situation de raccordement
    distant.</para>
    </question>
    <answer>
    <para>Pour commencer, on commente les entrées inutile du fichier
    <filename>/etc/netplan/enp0s1.yaml</filename>.</para>

<screen>cat /etc/netplan/enp0s1.yaml</screen>

<screen>network:
  version: 2
  ethernets:
    enp0s1:
      dhcp4: false
      dhcp6: false
      accept-ra: false
#     nameservers:
#       addresses:
#          - 172.16.0.2
#          - 2001:678:3fc:3::2

  vlans:
    enp0s1.440: # VLAN violet
      id: 440
      link: enp0s1
      addresses:
        - fe80:1b8::2/64
    enp0s1.441: # VLAN orange
      id: 441
      link: enp0s1
      addresses: []
#   enp0s1.52: # VLAN accès temporaire
#     id: 52
#     link: enp0s1
#     dhcp4: true
#     dhcp6: false
#     accept-ra: true</screen>

    <para>On peut appliquer directement les modifications à l'aide de la
    commande <command>netplan</command>.</para>

<screen>sudo netplan apply</screen>

<screen>sudo netplan status</screen>

    <caution>
    <para>L'affectation de l'adresse <acronym>IPv4</acronym> ou
    <acronym>IPv6</acronym> de résolution <acronym>DNS</acronym> pose problème.
    En effet, si le démon <command>pppd</command> propose bien deux adresses
    via l'option <option>usepeerdns</option>, ces propositions ne sont pas
    prises en charge par le service
    <application>systemd-resolved</application>.</para>

    <para>On contourne cette difficulté en affectant une adresse
    <acronym>IPv4</acronym> directement au service
    <application>systemd-resolved</application>.</para>
    </caution>

    <para>On édite le fichier <filename>/etc/systemd/resolved.conf</filename>
    pour affecter directement l'adresse de résolution <acronym>DNS</acronym>.
    Voici une copie des lignes utiles du fichier modifié. Toutes les autres
    lignes sont commentées.</para>

<screen>grep -Ev '(^#|^$)'  /etc/systemd/resolved.conf
[Resolve]
DNS=172.16.0.2</screen>

    <para>Il ne faut pas oublier de relancer le service pour prendre en compte
    les modifications du fichier.</para>

<screen>sudo systemctl restart systemd-resolved</screen>

    <para>Le routeur <citetitle>Spoke</citetitle> est maintenant prêt à être
    redémarré pour utiliser le lien de raccordement distant comme seul canal
    d'accès aux autres réseaux.</para>

<screen>sudo reboot</screen>
    </answer>
    </qandaentry>
	</qandaset>
	</sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='pppoe.hosting-network'>
    <title>Réseau d'hébergement de conteneurs</title>

    <para>À ce stade des manipulations, le routeur <citetitle>Spoke</citetitle>
    utilise la session <acronym>PPP</acronym> et le routage
    <acronym>IPv4</acronym> pour accéder à tous les réseaux.</para>

    <para>On peut le vérifier en affichant les tables de routage
    <acronym>IPv4</acronym> et <acronym>IPv6</acronym>.</para>

    <para>Dans la table de routage <acronym>IPv4</acronym>, on trouve la route
    par défaut.</para>

<screen>ip route ls</screen>

<screen><emphasis>default dev ppp0 scope link</emphasis>
10.4.41.1 dev ppp0 proto kernel scope link src 10.4.41.2</screen>

    <para>Dans la table de routage <acronym>IPv6</acronym>, on ne trouve que
    des entrées de lien local correspondant au préfixe
    <systemitem>fe80::/10</systemitem>.</para>

<screen>ip -6 route ls</screen>

<screen>fe80::d1b3:8c16:93d1:8370 dev ppp0 proto kernel metric 256 pref medium
fe80::f118:5b7b:cfb5:7b54 dev ppp0 proto kernel metric 256 pref medium
fe80::/64 dev enp0s1 proto kernel metric 256 pref medium
fe80::/64 dev enp0s1.441 proto kernel metric 256 pref medium
fe80::/64 dev enp0s1.440 proto kernel metric 256 pref medium
fe80:1b8::/64 dev enp0s1.440 proto kernel metric 256 pref medium</screen>

    <para>Dans cette partie, nous devons ajouter un commutateur pour raccorder
    les services hébergés sur le site distant et compléter la configuration du
    routage pour assurer les accès <acronym>IPv4</acronym> et
    <acronym>IPv6</acronym>.</para>

	<sect2 xml:id='pppoe.hosting.ovs'>
		<title>Ajout du commutateur virtuel</title>

    <para>Dans le scénario étudié, les services sont hébergés dans un réseau de
    conteneurs propre au routeur <citetitle>Spoke</citetitle>. La mise en œuvre
    de cette configuration passe par l'installation d'un commutateur virtuel
    appelé <systemitem>asw-host</systemitem>. On utilise <application>Open
    vSwitch</application> pour configurer ce commutateur.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
    <para><phrase>Quel est le paquet à installer pour ajouter un commutateur
    virtuel au routeur <citetitle>Spoke</citetitle>&nbsp;?</phrase></para>

	<para>Rechercher le mot clé <application>openvswitch</application> dans la
	liste des paquets.</para>
	</question>
	<answer>
	<para>Voici un exemple de recherche.</para>

<screen>apt search ^openvswitch</screen>

	<para>C'est le paquet <systemitem>openvswitch-switch</systemitem> qui nous
	intéresse. On l'installe.</para>

<screen>sudo apt -y install openvswitch-switch</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
    <para><phrase>Comment déclarer un commutateur à l'aide de l'outil
    <application>netplan.io</application>&nbsp;?</phrase></para>


    <para>Consulter la documentation de <citetitle>Netplan</citetitle> pour
    obtenir les informations sur la configuration des commutateurs virtuels
    <systemitem>openvswitch</systemitem> à l'adresse &url.netplan-doc;.</para>

    <para>On peut aussi rechercher les informations dans les fichiers exemples
    fournis avec le paquet <application>netplan.io</application>.</para>
	</question>
	<answer>
	<para>Voici un exemple de recherche.</para>

<screen>find /usr/share/doc/netplan* -type f -iname "openvswitch*"
/usr/share/doc/netplan/examples/openvswitch.yaml</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
    <para><phrase>Quelles sont les modifications à apporter au fichier de
    déclaration <acronym>YAML</acronym>
    <filename>/etc/netplan/enp0s1.yaml</filename> pour créer le commutateur
    <systemitem>asw-host</systemitem>&nbsp;?</phrase></para>
	</question>
	<answer>
    <para>Voici une copie du fichier
    <filename>/etc/netplan/enp0s1.yaml</filename> qui contient les instructions
    de création du commutateur <systemitem>asw-host</systemitem> seul.</para>

<screen>network:
  version: 2
  ethernets:
    enp0s1:
      dhcp4: false
      dhcp6: false
      accept-ra: false

    <emphasis>openvswitch: {}</emphasis>

  bridges:
    <emphasis>asw-host:</emphasis>
      <emphasis>openvswitch: {}</emphasis>

  vlans:
    enp0s1.440: # VLAN violet
      id: 440
      link: enp0s1
      addresses:
        - fe80:1b8::2/64
    enp0s1.441: # VLAN orange
      id: 441
      link: enp0s1
      addresses: []</screen>

    <para>On applique les nouvelles déclarations.</para>

<screen>sudo netplan apply</screen>

    <para>On vérifie que le nouveau commutateur a bien été créé dans la base
    <systemitem>Open vSwitch</systemitem>.</para>

<screen>sudo ovs-vsctl show</screen>

<screen>e288cc30-e290-44ae-8ed1-5e2a8d184033
    <emphasis>Bridge asw-host</emphasis>
        fail_mode: standalone
        Port asw-host
            Interface asw-host
                type: internal
    ovs_version: "3.4.0"</screen>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment ajouter une nouvelle interface virtuelle commutée
    (<wordasword>Switched Virtual Interface</wordasword>) qui servira de
    passerelle par défaut pour tous les hôtes du réseau d'hébergement du site
    distant&nbsp;?</phrase></para>

    <para>Rechercher dans la documentation <application>Netplan</application>
    des exemples de déclarations d'interfaces de type <acronym>SVI</acronym>
    appartenant à des <acronym>VLAN</acronym>s.</para>
    </question>
    <answer>
    <para>Voici une nouvelle copie du fichier
    <filename>/etc/netplan/enp0s1.yaml</filename> auquel on ajouté la
    déclaration d'une interface <systemitem>vlan40</systemitem> avec les
    adresses <acronym>IPv4</acronym> et <acronym>IPv6</acronym> conformes au
    contexte de la maquette utilisée pour la rédaction de ce document.</para>

<screen>network:
  version: 2
  ethernets:
    enp0s1:
      dhcp4: false
      dhcp6: false
      accept-ra: false

  openvswitch: {}

  bridges:
    asw-host:
      openvswitch: {}

  vlans:
    enp0s1.440: # VLAN violet
      id: 440
      link: enp0s1
      addresses:
        - fe80:1b8::2/64
    enp0s1.441: # VLAN orange
      id: 441
      link: enp0s1
      addresses: []
    <emphasis>vlan40:     # VLAN vert</emphasis>
      <emphasis>id: 40</emphasis>
      <emphasis>link: asw-host</emphasis>
      addresses:
        - 203.0.113.1/24
        - fda0:7a62:28::1/64
        - fe80:28::1/64</screen>
    </answer>
    </qandaentry>
	</qandaset>
	</sect2>

    <sect2 xml:id='pppoe.hosting.routing'>
        <title>Routage du réseau d'hébergement</title>

    <para>L'objectif de cette section est de rendre le réseau d'hébergement
    accessible depuis le routeur <citetitle>Hub</citetitle> et que le protocole
    <acronym>IPv6</acronym> soit utilisable depuis le routeur
    <citetitle>Spoke</citetitle>.</para>

    <para>Pour rendre le réseau d'hébergement du site distant accessible depuis
    le routeur <citetitle>Hub</citetitle>, il est nécessaire d'ajouter des
    routes statiques <acronym>IPv4</acronym> et <acronym>IPv6</acronym> à
    l'ouverture de la session <acronym>PPP</acronym>.</para>

    <para>Pour utiliser <acronym>IPv6</acronym> depuis le routeur
    <citetitle>Spoke</citetitle>, il faut ajouter une route par défaut
    <acronym>IPv6</acronym> aussi à l'ouverture de session
    <acronym>PPP</acronym>.</para>

    <para>On commence par l'ajout de routes statiques <acronym>IPv4</acronym>
    et <acronym>IPv6</acronym> côté routeur <citetitle>Hub</citetitle>.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
	<para><phrase>Comment ajouter manuellement les routes
	<acronym>IPv4</acronym> et <acronym>IPv6</acronym> vers le réseau desservi
	par le routeur vert&nbsp;?</phrase></para>

	<para>Consulter les pages de manuel sur le routage avec la commande&nbsp;:
	<userinput>man ip-route</userinput>.</para>
	</question>
	<answer>
	<para>Sachant que le site distant est raccordé via une liaison point à
	point unique, on choisit de désigner la destination par l'interface de la
	liaison.</para>

<screen>sudo ip route add 203.0.113.0/24 dev ppp0
sudo ip -6 route add fda0:7a62:28::/64 dev ppp0</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment appliquer ces routes statiques dans la configuration
	système pour qu'elles soient activées à chaque établissement de session
	<acronym>PPP</acronym>&nbsp;?</phrase></para>

	<para>Il faut parcourir l'arborescence du répertoire <filename
	class='directory'>/etc/ppp/</filename> pour repérer les scripts exécutés
	lors de l'ouverture de session. Créer un script pour chaque protocole de
	couche réseau qui ajoute la route statique voulue.</para>
	</question>
	<answer>
	<itemizedlist>
	<listitem>
	<para>Pour <acronym>IPv4</acronym>, le répertoire est <filename
	class='directory'>/etc/ppp/ip-up.d/</filename>. Voici comment créer le
	script exécutable <filename>staticroute</filename>.</para>

<screen>cat &lt;&lt; 'EOF' | sudo tee /etc/ppp/ip-up.d/staticroute
#!/bin/sh

if [ -z "${CONNECT_TIME}" ]; then
    ip route add 203.0.113.0/24 dev ${PPP_IFACE}
fi
EOF</screen>

<screen>sudo chmod +x /etc/ppp/ip-up.d/staticroute</screen>
	</listitem>

	<listitem>
	<para>Pour <acronym>IPv6</acronym>, le répertoire est <filename
	class='directory'>/etc/ppp/ipv6-up.d/</filename>. Voici comment créer le
	script exécutable <filename>staticroute</filename>.</para>

<screen>cat &lt;&lt; 'EOF' | sudo tee /etc/ppp/ipv6-up.d/staticroute
#!/bin/sh

if [ -z "${CONNECT_TIME}" ]; then
    ip -6 route add fda0:7a62:28::/64 dev ${PPP_IFACE}
fi
EOF</screen>

<screen>sudo chmod +x /etc/ppp/ipv6-up.d/staticroute</screen>
	</listitem>
	</itemizedlist>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment tester l'ajout de ces routes statiques et les
    communications vers le réseau d'hébergement depuis le routeur
    <citetitle>Hub</citetitle>&nbsp;?</phrase></para>

    <para>Afficher les tables de routage après réinitialisation d'une session
    <acronym>PPP</acronym> et lancer des tests <acronym>ICMP</acronym>
    <emphasis>vers</emphasis> les adresses de l'interface virtuelle commutée du
    routeur <acronym>Spoke</acronym>.</para>
    </question>
    <answer>
    <para>En redémarrant le service <systemitem>pppoe-server</systemitem> sur
    le routeur <citetitle>Hub</citetitle> ou le service
    <systemitem>ppp</systemitem> sur le routeur <citetitle>Spoke</citetitle>,
    on provoque un renouvellement de session <acronym>PPP</acronym>.</para>

    <para>On peut ensuite afficher les tables de routage du routeur
    <citetitle>Hub</citetitle>.</para>

<screen>ip route ls
default via 192.168.104.129 dev enp0s1.360 proto static
10.4.41.2 dev ppp0 proto kernel scope link src 10.4.41.1
192.168.104.128/29 dev enp0s1.360 proto kernel scope link src 192.168.104.130
<emphasis>203.0.113.0/24 dev ppp0 scope link</emphasis></screen>

<screen>ip -6 route ls
2001:678:3fc:168::/64 dev enp0s1.360 proto kernel metric 256 pref medium
2001:678:3fc:168::/64 dev enp0s1.360 proto ra metric 512 expires 2591839sec pref high
<emphasis>fda0:7a62:28::/64 dev ppp0 metric 1024 pref medium</emphasis>
fe80::d580:e038:8d05:636e dev ppp0 proto kernel metric 256 pref medium
fe80::dcfe:544d:d6ac:8b0f dev ppp0 proto kernel metric 256 pref medium
fe80::/64 dev enp0s1 proto kernel metric 256 pref medium
fe80::/64 dev enp0s1.441 proto kernel metric 256 pref medium
fe80::/64 dev enp0s1.440 proto kernel metric 256 pref medium
fe80::/64 dev enp0s1.360 proto kernel metric 256 pref medium
fe80:1b8::/64 dev enp0s1.440 proto kernel metric 256 pref medium
default via fe80:168::1 dev enp0s1.360 proto static metric 1024 onlink pref medium</screen>

    <para>On peut aussi afficher la solution de routage pour une adresse destination.</para>

<screen>ip route get <emphasis>203.0.113.1</emphasis>
203.0.113.1 <emphasis>dev ppp0</emphasis> src 10.4.41.1 uid 1000
    cache</screen>

<screen>ip -6 route get <emphasis>fda0:7a62:28::1</emphasis>
fda0:7a62:28::1 from :: <emphasis>dev ppp0</emphasis> src 2001:678:3fc:168:baad:caff:fefe:5 metric 1024 pref medium</screen>
    </answer>
    </qandaentry>
	</qandaset>

    <para>On peut maintenant passer au routeur <citetitle>Spoke</citetitle>
    pour effectuer le même travail sur les routes par défaut.</para>

	<qandaset defaultlabel='number'>
	<qandaentry>
	<question>
	<para><phrase>Comment ajouter des routes par défaut dans la configuration
	système pour qu'elles soient activées à chaque établissement de session
	<acronym>PPP</acronym>&nbsp;?</phrase></para>

	<para>Il faut parcourir l'arborescence du répertoire <filename
	class='directory'>/etc/ppp/</filename> pour repérer les scripts exécutés
	lors de l'ouverture de session. Créer un script pour chaque protocole de
	couche réseau qui ajoute la route statique voulue.</para>
	</question>
	<answer>
	<itemizedlist>
	<listitem>
	<para>Pour <acronym>IPv4</acronym>, le répertoire est <filename
	class='directory'>/etc/ppp/ip-up.d/</filename>. Voici comment créer un
	script exécutable appelé <filename>defaultroute</filename>.</para>

<screen>cat &lt;&lt; 'EOF' | sudo tee /etc/ppp/ip-up.d/defaultroute
#!/bin/sh

if [ -z "${CONNECT_TIME}" ]; then
	ip route add default dev ${PPP_IFACE}
fi
EOF</screen>

<screen>sudo chmod +x /etc/ppp/ip-up.d/defaultroute</screen>
	</listitem>

	<listitem>
	<para>Pour <acronym>IPv6</acronym>, le répertoire est <filename
	class='directory'>/etc/ppp/ipv6-up.d/</filename>. Voici comment créer un
	script exécutable aussi appelé<filename>defaultroute</filename>.</para>

<screen>cat &lt;&lt; 'EOF' | sudo tee /etc/ppp/ipv6-up.d/defaultroute
#!/bin/sh

  if [ -z "${CONNECT_TIME}" ]; then
      ip -6 route add default dev ${PPP_IFACE}
  fi
EOF</screen>

<screen>sudo chmod +x /etc/ppp/ipv6-up.d/defaultroute</screen>
	</listitem>
	</itemizedlist>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment tester l'ajout des routes par défaut et les
    communications <acronym>IPv6</acronym> depuis le routeur
    <citetitle>Spoke</citetitle>&nbsp;?</phrase></para>

    <para>Afficher les tables de routage après réinitialisation d'une session
    <acronym>PPP</acronym> et lancer des tests <acronym>ICMP</acronym>
    <emphasis>depuis</emphasis> les adresses de l'interface virtuelle commutée
    du routeur <acronym>Spoke</acronym>.</para>
    </question>
    <answer>
    <para>En redémarrant le service <systemitem>pppoe-server</systemitem> sur
    le routeur <citetitle>Hub</citetitle> ou le service
    <systemitem>ppp</systemitem> sur le routeur <citetitle>Spoke</citetitle>,
    on provoque un renouvellement de session <acronym>PPP</acronym>.</para>

    <para>On peut ensuite afficher les tables de routage du routeur
    <citetitle>Spoke</citetitle>.</para>

<screen>ip route ls default
default dev ppp0 scope link</screen>

<screen>ip -6 route ls default
default dev ppp0 metric 1024 pref medium</screen>

    <para>Il ne reste plus que le test <acronym>ICMPv6</acronym> pour qualifier
    le routage complet au niveau du routeur
    <citetitle>Spoke</citetitle>.</para>

<screen>ping -c2 2620:fe::fe
PING 2620:fe::fe (2620:fe::fe) 56 data bytes
64 bytes from 2620:fe::fe: icmp_seq=1 ttl=58 time=54.3 ms
64 bytes from 2620:fe::fe: icmp_seq=2 ttl=58 time=41.2 ms

--- 2620:fe::fe ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 41.208/47.735/54.262/6.527 ms</screen>
    </answer>
    </qandaentry>
    </qandaset>
    </sect2>

	<sect2 xml:id='pppoe.hosting.automatic-addressing'>
		<title>Adressage automatique dans le réseau d'hébergement</title>

    <para>Pour que les hôtes du réseau de conteneurs obtiennent automatiquement
    une configuration <acronym>IPv4</acronym> et <acronym>IPv6</acronym>, il
    faut ajouter le service <systemitem>dnsmasq</systemitem> sur le routeur
    <citetitle>Spoke</citetitle>. Il fournit les services
    <acronym>DHCPv4</acronym> et <acronym>SLAAC</acronym> en un seul et unique
    fichier de configuration.</para>

    <para>On débute par l'installation du paquet.</para>

<screen>sudo apt -y install dnsmasq</screen>

    <qandaset defaultlabel='number'>
    <qandaentry>
    <question>
	<para><phrase>Comment remplacer le fichier de configuration fourni lors de
	l'installation du paquet par notre propre fichier de
	configuration&nbsp;?</phrase></para>

	<para>Consulter le contenu du fichier
	<filename>/etc/dnsmasq.conf</filename> et extraire les options de configuration
	utiles au contexte de ces manipulations.</para>
    </question>
    <answer>
	<para>Voici la commande de copie du fichier issu de l'installation.</para>

<screen>sudo mv /etc/dnsmasq.conf /etc/dnsmasq.conf.dist</screen>

    <para>Voici un exemple de configuration adaptée à la maquette.</para>

<screen>cat &lt;&lt; EOF | sudo tee /etc/dnsmasq.conf
# Specify Container VLAN interface
interface=<emphasis>vlan40</emphasis>

# Enable DHCPv4 on Container VLAN
dhcp-range=<emphasis>203.0.113.20,203.0.113.200</emphasis>,3h

# Enable IPv6 router advertisements
enable-ra

# Enable SLAAC
dhcp-range=::,constructor:<emphasis>vlan40</emphasis>,ra-names,slaac

# Optional: Specify DNS servers
dhcp-option=option:dns-server,172.16.0.2,9.9.9.9
dhcp-option=option6:dns-server,[2001:678:3fc:3::2],[2620:fe::fe]

# Avoid DNS listen port conflict between dnsmasq and systemd-resolved
port=0
EOF</screen>

    <warning>
    <para>Il faut impérativement changer le numéro de VLAN ainsi que les
    adresses <acronym>IPv4</acronym> de l'exemple ci-dessus par les
    informations données dans le plan d'adressage des travaux pratiques.</para>

    <para>De plus, une fois le fichier créé, il ne faut pas oublier de
    redémarrer le service et de contrôler l'état de son fonctionnement.</para>
    </warning>

<screen>sudo systemctl restart dnsmasq
systemctl status dnsmasq</screen>
    </answer>
    </qandaentry>
    </qandaset>
	</sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='pppoe.incus'>
    <title>Conteneurs système Incus</title>

    <para>Maintenant que la configuration réseau de la topologie étudiée est
    complète, on peut passer à la gestion des conteneurs de service du site
    distant.</para>

	<sect2 xml:id='pppoe.incus.install'>
	    <title>Installation du gestionnaire de conteneurs Incus</title>

    <para>Sur le routeur <citetitle>Spoke</citetitle>, la gestion des
    conteneurs est confiée à <application>Incus</application>. Dans le contexte
    de ces manipulations, nous utilisons le mode <emphasis>bridge</emphasis>
    pour le raccordement réseau des conteneurs. Que l'on lance 3 conteneurs ou
    300, ceux-ci seront raccordés de façon transparente au commutateur virtuel
    <systemitem>asw-host</systemitem> et bénéficieront d'un adressage
    automatique.</para>

	<qandaset defaultlabel='number'>
    <qandaentry>
    <question>
    <para><phrase>Comment installer le gestionnaire de conteneurs
    <application>Incus</application>&nbsp;?</phrase></para>

    <para>Lancer une recherche  dans la liste des paquets Debian.</para>
    </question>
    <answer>
    <para>Le paquet s'appelle tout simplement
    <application>incus</application>.</para>

<screen>apt search ^incus</screen>

<screen>sudo apt -y install incus</screen>
    </answer>
    </qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment faire pour que l'utilisateur normal
    <literal>etu</literal> devienne administrateur et gestionnaire des
    conteneurs&nbsp;?</phrase></para>

    <para>Rechercher le nom du groupe système correspondant à l'utilisation des
    outils <application>Incus</application>.</para>
    </question>
    <answer>
    <para>Il faut que l'utilisateur normal appartienne au groupes systèmes
    <systemitem>incus</systemitem> et <systemitem>incus-admin</systemitem> pour
    qu'il ait tous les droits sur la gestion des conteneurs.</para>

<screen>grep incus /etc/group
incus:x:990:
incus-admin:x:989:</screen>

<screen>sudo adduser etu incus
sudo adduser etu incus-admin</screen>

    <warning>
    <para>Attention&nbsp;! Il faut se déconnecter/reconnecter pour bénéficier
    de la nouvelle attribution de groupe. On peut utiliser les commandes
    <command>groups</command> ou <command>id</command> pour vérifier le
    résultat.</para>
    </warning>

<screen>groups
etu adm sudo users <emphasis>incus-admin</emphasis> <emphasis>incus</emphasis></screen>
	</answer>
	</qandaentry>
	</qandaset>
	</sect2>

	<sect2 xml:id='pppoe.incus.init'>
	    <title>Configuration et lancement des conteneurs</title>

	<qandaset defaultlabel='number'>
	<qandaentry>
    <question>
    <para><phrase>Quelle est l'instruction de configuration initiale du
    gestionnaire <application>Incus</application>&nbsp;?</phrase></para>

    <para>Utiliser l'aide de la commande <command>incus</command>.</para>
    </question>
    <answer>
    <para>C'est l'instruction <userinput>incus admin init</userinput> qui nous
    intéresse.</para>

	<para>Voici une copie d'écran de son exécution.</para>

<screen>incus admin init</screen>

<screen>Would you like to use clustering? (yes/no) [default=no]:
Do you want to configure a new storage pool? (yes/no) [default=yes]:
Name of the new storage pool [default=default]:
Where should this storage pool store its data? [default=/var/lib/incus/storage-pools/default]:
Would you like to create a new local network bridge? (yes/no) [default=yes]: <emphasis>no</emphasis>
Would you like to use an existing bridge or host interface? (yes/no) [default=no]: <emphasis>yes</emphasis>
Name of the existing bridge or host interface: <emphasis>asw-host</emphasis>
Would you like the server to be available over the network? (yes/no) [default=no]:
Would you like stale cached images to be updated automatically? (yes/no) [default=yes]:
Would you like a YAML "init" preseed to be printed? (yes/no) [default=no]:</screen>
	</answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Quelle est l'instruction qui permet d'afficher le profil par
    défaut des conteneurs&nbsp;?</phrase></para>

    <para>Rechercher dans les options de la commande
    <command>incus profile</command>.</para>
    </question>
    <answer>
    <para>Voici un exemple d'exécution.</para>

<screen>incus profile show default</screen>

<screen>config: {}
description: Default Incus profile
devices:
  eth0:
    name: eth0
    nictype: <emphasis>macvlan</emphasis>
    parent: <emphasis>asw-host</emphasis>
    type: <emphasis>nic</emphasis>
  root:
    path: /
    pool: default
    type: disk
name: default
used_by: []
project: default</screen>

    <para>L'affichage de ce profil par défaut permet d'identifier les clés à
    modifier ou à ajouter.</para>

    <variablelist>
    <varlistentry>
    <term>Mode de raccordement</term>
    <term>nictype</term>
    <listitem>
    <para>La valeur attribuée par défaut est <option>macvlan</option>. Elle ne
    correspond pas à notre besoin puisque les services hébergés sur le site
    distant doivent pouvoir communiquer entre eux. On remplace cette valeur par
    <option>bridged</option>.</para>

<screen>incus profile device set default eth0 nictype bridged</screen>

<screen>incus profile device get default eth0 nictype
<emphasis>bridged</emphasis></screen>
    </listitem>
    </varlistentry>
    <varlistentry>
    <term>Attribution de VLAN</term>
    <term>vlan</term>
    <listitem>
    <para>La configuration du profil par défaut n'attribue pas l'appartenance à
    un <acronym>VLAN</acronym> particulier. Dans le contexte de cette maquette,
    le réseau des conteneurs correspond au <acronym>VLAN</acronym>
    <option>40</option>. On ajoute la clé <option>vlan</option> au profil par
    défaut.</para>

<screen>incus profile device set default eth0 vlan 40</screen>

<screen>incus profile device get default eth0 vlan
<emphasis>40</emphasis></screen>
    </listitem>
    </varlistentry>
    </variablelist>
    </answer>
    </qandaentry>

	<qandaentry>
    <question>
    <para><phrase>Quelle est l'instruction de création et de lancement de
    nouveaux conteneurs&nbsp;?</phrase></para>

    <para>Rechercher dans les options de la commande
    <command>incus</command>.</para>

    <para>Tester son exécution avec un conteneur de type
    <literal>debian/trixie</literal>.</para>
    </question>
    <answer>
    <para>Voici un exemple d'exécution pour 3 nouveaux conteneurs.</para>

<screen>for i in {0..2}; do incus launch images:debian/trixie c$i; done</screen>

<screen>Launching c0
Launching c1
Launching c2</screen>

<screen>incus ls</screen>

<screen>+------+---------+----------------------+------------------------------------------+-----------+-----------+
| NAME |  STATE  |         IPV4         |                   IPV6                   |   TYPE    | SNAPSHOTS |
+------+---------+----------------------+------------------------------------------+-----------+-----------+
| c0   | RUNNING | 203.0.113.144 (eth0) | fda0:7a62:28:0:216:3eff:fe67:b848 (eth0) | CONTAINER | 0         |
+------+---------+----------------------+------------------------------------------+-----------+-----------+
| c1   | RUNNING | 203.0.113.76 (eth0)  | fda0:7a62:28:0:216:3eff:fe0a:c3ba (eth0) | CONTAINER | 0         |
+------+---------+----------------------+------------------------------------------+-----------+-----------+
| c2   | RUNNING | 203.0.113.184 (eth0) | fda0:7a62:28:0:216:3eff:febb:bfb9 (eth0) | CONTAINER | 0         |
+------+---------+----------------------+------------------------------------------+-----------+-----------+</screen>

    <para>La copie d'écran ci-dessus montre que l'adressage automatique des
    conteneurs a fonctionné.</para>
    </answer>
	</qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment tester les communications réseau depuis chaque
    conteneur&nbsp;?</phrase></para>

    <para>Rechercher dans les options de la commande <command>incus</command>
    celle qui permet de lancer un traitement dans le conteneur.</para>
    </question>
    <answer>
    <para>C'est la commande <command>incus exec</command> qui correspond à
    notre besoin. Voici une exemple de boucle qui permet de lancer les tests
    <acronym>ICMP</acronym> <acronym>IPv4</acronym> et <acronym>IPv6</acronym>
    dans les 3 conteneurs actifs.</para>

<screen>for i in {0..2}
do
    echo ">>>>>>>>>>>>>>>>> c$i"
    incus exec c$i -- ping -qc2 9.9.9.9
    incus exec c$i -- ping -qc2 2620:fe::fe
done</screen>

<screen>>>>>>>>>>>>>>>>>> <emphasis>c0</emphasis>
PING 9.9.9.9 (9.9.9.9) 56(84) bytes of data.

--- 9.9.9.9 ping statistics ---
2 packets transmitted, 2 received, <emphasis>0% packet loss</emphasis>, time 1001ms
rtt min/avg/max/mdev = 29.420/29.666/29.913/0.246 ms
PING 2620:fe::fe (2620:fe::fe) 56 data bytes

--- 2620:fe::fe ping statistics ---
2 packets transmitted, 2 received, <emphasis>0% packet loss</emphasis>, time 1001ms
rtt min/avg/max/mdev = 41.829/47.305/52.782/5.476 ms
>>>>>>>>>>>>>>>>> <emphasis>c1</emphasis>
PING 9.9.9.9 (9.9.9.9) 56(84) bytes of data.

--- 9.9.9.9 ping statistics ---
2 packets transmitted, 2 received, <emphasis>0% packet loss</emphasis>, time 1002ms
rtt min/avg/max/mdev = 29.477/29.490/29.504/0.013 ms
PING 2620:fe::fe (2620:fe::fe) 56 data bytes

--- 2620:fe::fe ping statistics ---
2 packets transmitted, 2 received, <emphasis>0% packet loss</emphasis>, time 1002ms
rtt min/avg/max/mdev = 41.401/41.546/41.692/0.145 ms
>>>>>>>>>>>>>>>>> <emphasis>c2</emphasis>
PING 9.9.9.9 (9.9.9.9) 56(84) bytes of data.

--- 9.9.9.9 ping statistics ---
2 packets transmitted, 2 received, <emphasis>0% packet loss</emphasis>, time 1001ms
rtt min/avg/max/mdev = 28.820/29.427/30.034/0.607 ms
PING 2620:fe::fe (2620:fe::fe) 56 data bytes

--- 2620:fe::fe ping statistics ---
2 packets transmitted, 2 received, <emphasis>0% packet loss</emphasis>, time 1002ms
rtt min/avg/max/mdev = 40.708/41.037/41.367/0.329 ms</screen>
    </answer>
    </qandaentry>

    <qandaentry>
    <question>
    <para><phrase>Comment exécuter des jeux d'instructions dans les conteneurs
    depuis le serveur d'hébergement&nbsp;?</phrase></para>

    <para>On entre ici dans le domaine de l'automatisation à l'aide de scripts
    <citetitle>Bash</citetitle>. Même si l'ambition reste très modeste, on peut
    développer un script qui utilise la liste des conteneurs actifs pour lancer
    une suite de traitements dans ces mêmes conteneurs.</para>

    <para>Comme les conteneurs <citetitle>Incus</citetitle> appartiennent à la
    famille des conteneurs système, ils disposent d'une arborescence complète
    et d'une gestion de paquets. Allons y pour une mise à jour des paquets de
    chaque conteneur actif.</para>
    </question>
    <answer>
    <para>Voici un exemple de code qui stocke les commandes à lancer dans un
    tableau constitué des arguments de la ligne de commande. Ces commandes sont
    exécutées sur chacun des conteneurs actifs.</para>

<screen>#!/bin/bash

cmds=("$@")

clist=$(incus list status=running -c n -f compact | grep -v NAME | tr '\n' ' ' | tr -s ' ')

for c in $clist; do
  echo ">>>>>>>>>>>>>>>>> $c"
  for cmd in "${cmds[@]}"; do
    eval "incus exec $c -- $cmd"
  done
done</screen>

    <para>Voici un exemple d'exécution du script
    <filename>run-commands-in-containers.sh</filename> qui contient les
    instructions ci-dessus.</para>

<screen>bash run-commands-in-containers.sh "apt update" "apt -y full-upgrade" "apt clean" "apt -y autopurge"</screen>

<screen>>>>>>>>>>>>>>>>>> c0
Get:1 http://deb.debian.org/debian trixie InRelease [169 kB]
Get:2 http://deb.debian.org/debian trixie-updates InRelease [49.6 kB]
Get:3 http://deb.debian.org/debian-security trixie-security InRelease [43.5 kB]
Get:4 http://deb.debian.org/debian trixie/main amd64 Packages.diff/Index [27.9 kB]
Get:5 http://deb.debian.org/debian trixie/main amd64 Packages 2024-09-22-0804.28.pdiff [5327 B]
Get:5 http://deb.debian.org/debian trixie/main amd64 Packages 2024-09-22-0804.28.pdiff [5327 B]
Fetched 296 kB in 1s (216 kB/s)
All packages are up to date.
Summary:
  Upgrading: 0, Installing: 0, Removing: 0, Not Upgrading: 0
Summary:
  Upgrading: 0, Installing: 0, Removing: 0, Not Upgrading: 0
>>>>>>>>>>>>>>>>> c1
Get:1 http://deb.debian.org/debian trixie InRelease [169 kB]
Get:2 http://deb.debian.org/debian trixie-updates InRelease [49.6 kB]
Get:3 http://deb.debian.org/debian-security trixie-security InRelease [43.5 kB]
Get:4 http://deb.debian.org/debian trixie/main amd64 Packages.diff/Index [27.9 kB]
Get:5 http://deb.debian.org/debian trixie/main amd64 Packages 2024-09-22-0804.28.pdiff [5327 B]
Get:5 http://deb.debian.org/debian trixie/main amd64 Packages 2024-09-22-0804.28.pdiff [5327 B]
Fetched 296 kB in 1s (279 kB/s)
All packages are up to date.
Summary:
  Upgrading: 0, Installing: 0, Removing: 0, Not Upgrading: 0
Summary:
  Upgrading: 0, Installing: 0, Removing: 0, Not Upgrading: 0
>>>>>>>>>>>>>>>>> c2
Get:1 http://deb.debian.org/debian trixie InRelease [169 kB]
Get:2 http://deb.debian.org/debian trixie-updates InRelease [49.6 kB]
Get:3 http://deb.debian.org/debian-security trixie-security InRelease [43.5 kB]
Get:4 http://deb.debian.org/debian trixie/main amd64 Packages.diff/Index [27.9 kB]
Get:5 http://deb.debian.org/debian trixie/main amd64 Packages 2024-09-22-0804.28.pdiff [5327 B]
Get:5 http://deb.debian.org/debian trixie/main amd64 Packages 2024-09-22-0804.28.pdiff [5327 B]
Fetched 296 kB in 1s (277 kB/s)
All packages are up to date.
Summary:
  Upgrading: 0, Installing: 0, Removing: 0, Not Upgrading: 0
Summary:
  Upgrading: 0, Installing: 0, Removing: 0, Not Upgrading: 0</screen>
    </answer>
    </qandaentry>
    </qandaset>
    </sect2>

    <sect2 xml:id='pppoe.incus.addressing'>
        <title>Adressage statique des conteneurs</title>

    <para>Avec l'adressage automatique des conteneurs système, on sait les
    administrer depuis le routeur <citetitle>Spoke</citetitle>. Dans un
    scénario plus réaliste, il faut être capable d'administrer ces mêmes
    conteneurs depuis le routeur <citetitle>Hub</citetitle> ou mieux encore
    depuis l'infrastructure de déploiement <acronym>CI/CD</acronym> de
    l'entreprise. Ce type d'usage suppose que le conteneurs du site distant
    utilisent des adresses <acronym>IPv4</acronym> et <acronym>IPv6</acronym>
    statiques.</para>

    <qandaset>
    <qandaentry>
    <question>
    <para><phrase>Comment passer d'un adressage automatique à un adressage
    statique pour chaque conteneur&nbsp;?</phrase></para>

    <para>Comme la gestion de la configuration des interfaces est assurée par
    <systemitem>systemd-networkd</systemitem>, il faut s'intéresser à la
    syntaxe du fichier <filename>/etc/systemd/network/eth0.network</filename>
    de chaque conteneur.</para>

    <para>Cette question est un prétexte pour utiliser le transfert de fichier
    depuis le serveur d'hébergement vers les conteneurs.</para>

    <para>Voici une liste des actions à réaliser sur tous les conteneurs
    actifs.</para>
    <orderedlist>
    <listitem>
    <para>Installer le paquet <application>netplan.io</application></para>
    </listitem>
    <listitem>
    <para>Générer le fichier de déclaration <acronym>YAML</acronym> des
    paramètres de configuration réseau des interfaces
    <systemitem>eth0</systemitem></para>
    </listitem>
    <listitem>
    <para>Transférer le fichier de déclaration <acronym>YAML</acronym> dans le
    dossier <filename class='directory'>/etc/netplan/</filename></para>
    </listitem>
    <listitem>
    <para>Effacer le fichier
    <filename>/etc/systemd/network/eth0.network</filename></para>
    </listitem>
    <listitem>
    <para>Appliquer la nouvelle configuration réseau</para>
    </listitem>
    </orderedlist>
    </question>
    <answer>
    <para>Pour connaître les paramètres de configuration réseau d'une interface
    de conteneur, on peut extraire le fichier
    <filename>/etc/systemd/network/eth0.network</filename> et consulter son
    contenu.</para>

<screen>incus file pull c0/etc/systemd/network/eth0.network .
cat eth0.network</screen>

<screen>[Match]
Name=eth0

[Network]
DHCP=true

[DHCPv4]
UseDomains=true

[DHCP]
ClientIdentifier=mac</screen>

    <para>On vérifie ainsi que la configuration réseau issue de la source de
    tirage des conteneurs implique un adressage automatique au moins en
    <acronym>IPv4</acronym>. On propose donc de remplacer cet adressage
    automatique par un adressage statique.</para>

    <para>Voici une proposition de script qui traite chacun des points définis
    dans la question.</para>

<screen>#!/bin/bash

# Préparation -> générer la liste des conteneurs actifs
clist=$(incus list status=running -c n -f compact | grep -v NAME | tr '\n' ' ' | tr -s ' ')

# Étape 1 -> installer le paquet netplan.io
. run-commands-in-containers.sh "apt -y install netplan.io"

addr_idx=0
for c in $clist; do
  echo ">>>>>>>>>>>>>>>>> $c"

# Étape 2 -> générer le fichier de configuration réseau YAML
$(cat &lt;&lt; EOF > eth0.yaml
network:
  version: 2
  renderer: networkd
  ethernets:
    eth0:
      dhcp4: false
      dhcp6: false
      accept-ra: true
      addresses:
        - 203.0.113.$((addr_idx + 10))/24
        - fda0:7a62:28::$(printf "%x" $((addr_idx + 10)))/64
      routes:
        - to: default
          via: 203.0.113.1
        - to: "::/0"
          via: fe80:28::1
          on-link: true
      nameservers:
        addresses:
          - 172.16.0.2
          - 2001:678:3fc:3::2
EOF
)

# Étape 3 -> transférer le fichier de déclaration YAML
  incus file push eth0.yaml $c/etc/netplan/eth0.yaml

# Étape 4 -> effacer le fichier /etc/systemd/network/eth0.network
  incus exec $c -- rm /etc/systemd/network/eth0.network

# Étape 5 -> appliquer la nouvelle configuration
  incus exec $c -- netplan apply

  ((addr_idx++))
done

exit 0</screen>

    <para>Si le code du script ci-dessus est placé dans un fichier appelé
    <filename>set-static-addressing.sh</filename>, on peut l'exécuter
    directement et relever les résultats.</para>

<screen>bash set-static-addressing.sh</screen>

<screen>incus ls</screen>

<screen>+------+---------+---------------------+------------------------------------------+-----------+-----------+
| NAME |  STATE  |        IPV4         |                   IPV6                   |   TYPE    | SNAPSHOTS |
+------+---------+---------------------+------------------------------------------+-----------+-----------+
| c0   | RUNNING | 203.0.113.10 (eth0) | fda0:7a62:28::a (eth0)                   | CONTAINER | 0         |
|      |         |                     | fda0:7a62:28:0:216:3eff:fe67:b848 (eth0) |           |           |
+------+---------+---------------------+------------------------------------------+-----------+-----------+
| c1   | RUNNING | 203.0.113.11 (eth0) | fda0:7a62:28::b (eth0)                   | CONTAINER | 0         |
|      |         |                     | fda0:7a62:28:0:216:3eff:fe0a:c3ba (eth0) |           |           |
+------+---------+---------------------+------------------------------------------+-----------+-----------+
| c2   | RUNNING | 203.0.113.12 (eth0) | fda0:7a62:28::c (eth0)                   | CONTAINER | 0         |
|      |         |                     | fda0:7a62:28:0:216:3eff:febb:bfb9 (eth0) |           |           |
+------+---------+---------------------+------------------------------------------+-----------+-----------+</screen>
    </answer>
    </qandaentry>

	<qandaentry>
	<question>
	<para><phrase>Comment vérifier la connectivité réseau depuis les
	conteneurs&nbsp;?</phrase></para>

	<para>La question précédente montre que la configuration réseau des
	conteneurs est complète. On doit donc lancer des tests
	<acronym>IPv4</acronym> et <acronym>IPv6</acronym>.</para>
	</question>
	<answer>
	<para>Voici deux exemples de tests <acronym>ICMP</acronym>.</para>

<screen>for i in {0..2}
do
	echo ">>>>>>>>>>>>>>>>> c$i"
	incus exec c$i -- ping -c2 2620:fe::fe
done</screen>

<screen>for i in {0..2}
do
	echo ">>>>>>>>>>>>>>>>> c$i"
	incus exec c$i -- ping -c2 9.9.9.9
done</screen>
	</answer>
	</qandaentry>

	<qandaentry>
	<question>
    <para><phrase>Comment ouvrir un accès <acronym>SSH</acronym> avec un compte
    utilisateur normal dans les	conteneurs&nbsp;?</phrase></para>

    <para>Reprendre le script d'exécution des commandes à l'intérieur des
    conteneurs pour installer les paquets nécessaires, créer le compte
    utilisateur et autoriser la connexion <acronym>SSH</acronym> par mot de
    passe.</para>
    </question>
    <answer>
    <para>Voici un exemple de script qui assure les traitements
    demandés.</para>

<screen>#!/bin/bash

# Function to check if a variable is a non-empty string
is_non_empty_string() {
    if [[ -n "$1" &amp;&amp; "$1" == *[!\ ]* ]]; then
        return 0 # True
    else
        return 1 # False
    fi
}

# Check if both arguments are provided
if [ $# -ne 2 ]; then
    echo "Error: This script requires exactly two arguments."
    echo "Usage: $0 &lt;username> &lt;password>"
    exit 1
fi

# Check if $1 is a non-empty string
if ! is_non_empty_string "$1"; then
    echo "Error: First argument is not a valid non-empty string."
    exit 1
fi

# Check if $2 is a non-empty string
if ! is_non_empty_string "$2"; then
    echo "Error: Second argument is not a valid non-empty string."
    exit 1
fi

USER=$1
shift
PASSWD=$1

. run-commands-in-containers.sh \
        "apt -y install ssh sudo" \
        "adduser --gecos \"\" --disabled-password ${USER}" \
        "adduser ${USER} sudo" \
        "adduser ${USER} adm" \
        "sh -c \"echo '${USER}:${PASSWD}' | chpasswd\"" \
        "sed -i 's/#Port 22/Port 22\nPort 2222/' /etc/ssh/sshd_config" \
        "sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config" \
        "dpkg-reconfigure openssh-server"

exit 0</screen>

    <para>Voici un exemple de lancement du script avec un nom d'utilisateur et
    son mot de passe comme arguments de la ligne de commande.</para>

<screen>bash set-user-and-ssh.sh "etu" "xxxxxxx"</screen>

    <para>Le résultat est évalué par une connexion <acronym>SSH</acronym>
    depuis le routeur <citetitle>Hub</citetitle>.</para>

<screen><prompt>etu@hub:~$</prompt> ssh etu@fda0:7a62:28::b
The authenticity of host 'fda0:7a62:28::b (fda0:7a62:28::b)' can't be established.
ED25519 key fingerprint is SHA256:6qkAjHutYP6hbpa4iNh94y1Bk4wRqRD62ahOC+3WC9g.
This key is not known by any other names.
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes
Warning: Permanently added 'fda0:7a62:28::b' (ED25519) to the list of known hosts.
etu@fda0:7a62:28::b's password:
Linux c1 6.10.9-amd64 #1 SMP PREEMPT_DYNAMIC Debian 6.10.9-1 (2024-09-08) x86_64

The programs included with the Debian GNU/Linux system are free software;
the exact distribution terms for each program are described in the
individual files in /usr/share/doc/*/copyright.

Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
permitted by applicable law.
Last login: Sun Sep 22 14:24:07 2024 from 203.0.113.1
<prompt>etu@c1:~$</prompt></screen>
    </answer>
    </qandaentry>
	</qandaset>
	</sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='pppoe.trace'>
	<title>Traces d'une ouverture de session PPPoE</title>

    <para>Pour obtenir la trace des transactions entre les deux routeurs de la
    maquette, on fait appel à la commande <command>journalctl</command> et on
    consulte les journaux de l'unité <application>systemd</application> ajoutée
    sur chaque routeur.</para>

<sect2 xml:id='pppoe.trace.spoke'>
	<title>Journaux du routeur Spoke</title>

    <para>Côté routeur <emphasis>Spoke</emphasis>, l'unité
    <application>systemd</application> s'appelle
    <systemitem>ppp.service</systemitem>. Voici la commande de consultation de
    l'ouverture de session <acronym>PPP</acronym> la plus récente.</para>

<screen>journalctl -n 100 -f -u ppp.service</screen>

<screen>spoke systemd[1]: Starting ppp.service - PPPoE Client Connection...
spoke pppd[629]: Plugin rp-pppoe.so loaded.
spoke pon[629]: Plugin rp-pppoe.so loaded.
spoke pppd[639]: pppd 2.5.0 started by root, uid 0
spoke systemd[1]: Started ppp.service - PPPoE Client Connection.
spoke pppd[639]: Send PPPOE Discovery V1T1 PADI session 0x0 length 12<co xml:id="pppoe.padi"/>
spoke pppd[639]:  dst ff:ff:ff:ff:ff:ff  src b8:ad:ca:fe:00:06
spoke pppd[639]:  [service-name] [host-uniq 7f 02 00 00]
spoke pppd[639]: Recv PPPOE Discovery V1T1 PADO session 0x0 length 44
spoke pppd[639]:  dst b8:ad:ca:fe:00:06  src b8:ad:ca:fe:00:05
spoke pppd[639]:  [AC-name BRAS] [service-name] [AC-cookie eb 9f 92 61 e1 ee 01 a1 5d 8f 11 61 8a fb c8 4b fc 01 00 00] [host-uniq 7f 02 00 00]
spoke pppd[639]: Access-Concentrator: BRAS
spoke pppd[639]: Cookie: eb 9f 92 61 e1 ee 01 a1 5d 8f 11 61 8a fb c8 4b fc 01 00 00
spoke pppd[639]: AC-Ethernet-Address: b8:ad:ca:fe:00:05
spoke pppd[639]: --------------------------------------------------
spoke pppd[639]: Send PPPOE Discovery V1T1 PADR session 0x0 length 36
spoke pppd[639]:  dst b8:ad:ca:fe:00:05  src b8:ad:ca:fe:00:06
spoke pppd[639]:  [service-name] [host-uniq 7f 02 00 00] [AC-cookie eb 9f 92 61 e1 ee 01 a1 5d 8f 11 61 8a fb c8 4b fc 01 00 00]
spoke pppd[639]: Recv PPPOE Discovery V1T1 PADS session 0x1 length 12
spoke pppd[639]:  dst b8:ad:ca:fe:00:06  src b8:ad:ca:fe:00:05
spoke pppd[639]:  [service-name] [host-uniq 7f 02 00 00]
spoke pppd[639]: PPP session is 1
spoke pppd[639]: Connected to B8:AD:CA:FE:00:05 via interface enp0s1.441
spoke pppd[639]: using channel 1
spoke pppd[639]: Using interface ppp0
spoke pppd[639]: Connect: ppp0 &lt;--> enp0s1.441<co xml:id="lcp"/>
spoke pppd[639]: sent [LCP ConfReq id=0x1 &lt;mru 1492> &lt;magic 0xbf826095>]
spoke pppd[639]: rcvd [LCP ConfReq id=0x1 &lt;mru 1492> &lt;auth eap> &lt;magic 0x471e9bda>]
spoke pppd[639]: sent [LCP ConfAck id=0x1 &lt;mru 1492> &lt;auth eap> &lt;magic 0x471e9bda>]
spoke pppd[639]: rcvd [LCP ConfAck id=0x1 &lt;mru 1492> &lt;magic 0xbf826095>]
spoke pppd[639]: sent [LCP EchoReq id=0x0 magic=0xbf826095]
spoke pppd[639]: rcvd [LCP EchoReq id=0x0 magic=0x471e9bda]
spoke pppd[639]: sent [LCP EchoRep id=0x0 magic=0xbf826095]
spoke pppd[639]: rcvd [EAP Request id=0xa1 Identity &lt;Message "Name">]
spoke pppd[639]: EAP: Identity prompt "Name"
spoke pppd[639]: sent [EAP Response id=0xa1 Identity &lt;Name "spoke_site0">]
spoke pppd[639]: rcvd [LCP EchoRep id=0x0 magic=0x471e9bda]
spoke pppd[639]: rcvd [EAP Request id=0xa2 MD5-Challenge &lt;Value 81 3b a7 d1 eb 86 42 15 2c b9 1b 07 83 98 e2 dd b7 c6 57 b4 b5 0f> &lt;Name "hub">]
spoke pppd[639]: sent [EAP Response id=0xa2 MD5-Challenge &lt;Value 16 e7 3d fa d2 4b 6a 73 41 5f 86 c8 84 97 ed f0> &lt;Name "spoke_site0">]
spoke pppd[639]: rcvd [EAP Success id=0xa3]
spoke pppd[639]: EAP authentication succeeded
spoke pppd[639]: peer from calling number B8:AD:CA:FE:00:05 authorized
spoke pppd[639]: sent [IPCP ConfReq id=0x1 &lt;addr 0.0.0.0> &lt;ms-dns1 0.0.0.0> &lt;ms-dns2 0.0.0.0>]<co xml:id="ncp"/>
spoke pppd[639]: sent [IPV6CP ConfReq id=0x1 &lt;addr fe80::9869:8831:104a:570a>]
spoke pppd[639]: rcvd [CCP ConfReq id=0x1 &lt;bsd v1 15>]
spoke pppd[639]: sent [CCP ConfReq id=0x1]
spoke pppd[639]: sent [CCP ConfRej id=0x1 &lt;bsd v1 15>]
spoke pppd[639]: rcvd [IPCP ConfReq id=0x1 &lt;addr 10.4.41.1>]
spoke pppd[639]: sent [IPCP ConfAck id=0x1 &lt;addr 10.4.41.1>]
spoke pppd[639]: rcvd [IPV6CP ConfReq id=0x1 &lt;addr fe80::61d3:68e0:1e34:e123>]
spoke pppd[639]: sent [IPV6CP ConfAck id=0x1 &lt;addr fe80::61d3:68e0:1e34:e123>]
spoke pppd[639]: rcvd [IPCP ConfNak id=0x1 &lt;addr 10.4.41.2> &lt;ms-dns1 172.16.0.2> &lt;ms-dns2 172.16.0.2>]
spoke pppd[639]: sent [IPCP ConfReq id=0x2 &lt;addr 10.4.41.2> &lt;ms-dns1 172.16.0.2> &lt;ms-dns2 172.16.0.2>]
spoke pppd[639]: rcvd [IPV6CP ConfAck id=0x1 &lt;addr fe80::9869:8831:104a:570a>]
spoke pppd[639]: local  LL address fe80::9869:8831:104a:570a
spoke pppd[639]: remote LL address fe80::61d3:68e0:1e34:e123
spoke pppd[639]: Script /etc/ppp/ipv6-up started (pid 653)
spoke pppd[639]: rcvd [CCP ConfAck id=0x1]
spoke pppd[639]: rcvd [CCP ConfReq id=0x2]
spoke pppd[639]: sent [CCP ConfAck id=0x2]
spoke pppd[639]: rcvd [IPCP ConfAck id=0x2 &lt;addr 10.4.41.2> &lt;ms-dns1 172.16.0.2> &lt;ms-dns2 172.16.0.2>]
spoke pppd[639]: Script /etc/ppp/ip-pre-up started (pid 658)
spoke pppd[639]: Script /etc/ppp/ip-pre-up finished (pid 658), status = 0x0
spoke pppd[639]: local  IP address 10.4.41.2
spoke pppd[639]: remote IP address 10.4.41.1
spoke pppd[639]: primary   DNS address 172.16.0.2
spoke pppd[639]: secondary DNS address 172.16.0.2
spoke pppd[639]: Script /etc/ppp/ip-up started (pid 662)
spoke pppd[639]: Script /etc/ppp/ipv6-up finished (pid 653), status = 0x0
spoke pppd[639]: Script /etc/ppp/ip-up finished (pid 662), status = 0x0</screen>

	<calloutlist>
	<callout arearefs='pppoe.padi'>
		<para>Sur un réseau de diffusion il est nécessaire d'identifier les
		deux hôtes qui doivent établir une session <acronym>PPP</acronym>.
		Cette toute première phase d'identification utilise des trames
		spécifiques avec les messages décrits dans la <xref
		linkend='pppoe.ethernet' />.</para>
	</callout>
	<callout arearefs='lcp'>
		<para>La sous-couche <wordasword>Link Control Protocol</wordasword>
		(<acronym>LCP</acronym>) assure la configuration automatique des
		interfaces à chaque extrémité. Les paramètres négociés entre les deux
		hôtes en communication sont multiples&nbsp;: l'adaptation de la taille de
		datagramme, les caractères d'échappement, les numéros magiques et la
		sélection des options d'authentification.</para>
	</callout>
	<callout arearefs='ncp'>
		<para>La sous-couche <wordasword>Network Control Protocol</wordasword>
		(<acronym>NCP</acronym>) assure l'encapsulation de multiples protocoles
		de la couche réseau. Dans l'exemple donné, c'est le protocole
		<acronym>IPv4</acronym> qui est utilisé ; d'où l'acronyme
		<acronym>IPCP</acronym>.</para>
	</callout>
	</calloutlist>
</sect2>

<sect2 xml:id='pppoe.trace.hub'>
	<title>Journaux du routeur Hub</title>

    <para>Côté routeur <emphasis>hub</emphasis>, l'unité
    <application>systemd</application> s'appelle
    <systemitem>pppoe-server.service</systemitem>. Voici la commande de
    consultation de l'ouverture de session <acronym>PPP</acronym> la plus
    récente.</para>

<screen>journalctl -n 100 -f -u pppoe-server.service</screen>

<screen>hub pppoe-server[610]: Session 1 created for client b8:ad:ca:fe:00:06 (10.4.41.2) on enp0s1.441 using Service-Name ''
hub pppd[610]: pppd 2.5.0 started by root, uid 0
hub pppd[610]: using channel 2
hub pppd[610]: Using interface ppp0
hub pppd[610]: Connect: ppp0 &lt;--> /dev/pts/0
hub pppd[610]: rcvd [LCP ConfReq id=0x1 &lt;mru 1492> &lt;magic 0xbf826095>]
hub pppd[610]: sent [LCP ConfReq id=0x1 &lt;mru 1492> &lt;auth eap> &lt;magic 0x471e9bda>]
hub pppd[610]: sent [LCP ConfAck id=0x1 &lt;mru 1492> &lt;magic 0xbf826095>]
hub pppd[610]: rcvd [LCP ConfAck id=0x1 &lt;mru 1492> &lt;auth eap> &lt;magic 0x471e9bda>]
hub pppd[610]: sent [LCP EchoReq id=0x0 magic=0x471e9bda]
hub pppd[610]: sent [EAP Request id=0xa1 Identity &lt;Message "Name">]
hub pppd[610]: rcvd [LCP EchoReq id=0x0 magic=0xbf826095]
hub pppd[610]: sent [LCP EchoRep id=0x0 magic=0x471e9bda]
hub pppd[610]: rcvd [LCP EchoRep id=0x0 magic=0xbf826095]
hub pppd[610]: rcvd [EAP Response id=0xa1 Identity &lt;Name "spoke_site0">]
hub pppd[610]: EAP: unauthenticated peer name "spoke_site0"
hub pppd[610]: EAP id=0xa1 'Identify' -> 'MD5Chall'
hub pppd[610]: sent [EAP Request id=0xa2 MD5-Challenge &lt;Value 81 3b a7 d1 eb 86 42 15 2c b9 1b 07 83 98 e2 dd b7 c6 57 b4 b5 0f> &lt;Name "hub">]
hub pppd[610]: rcvd [EAP Response id=0xa2 MD5-Challenge &lt;Value 16 e7 3d fa d2 4b 6a 73 41 5f 86 c8 84 97 ed f0> &lt;Name "spoke_site0">]
hub pppd[610]: sent [EAP Success id=0xa3]
hub pppd[610]: peer from calling number b8:ad:ca:fe:00:06 authorized
hub pppd[610]: sent [CCP ConfReq id=0x1 &lt;bsd v1 15>]
hub pppd[610]: sent [IPCP ConfReq id=0x1 &lt;addr 10.4.41.1>]
hub pppd[610]: sent [IPV6CP ConfReq id=0x1 &lt;addr fe80::61d3:68e0:1e34:e123>]
hub pppd[610]: EAP id=0xa3 'MD5Chall' -> 'Open'
hub pppd[610]: rcvd [IPCP ConfReq id=0x1 &lt;addr 0.0.0.0> &lt;ms-dns1 0.0.0.0> &lt;ms-dns2 0.0.0.0>]
hub pppd[610]: sent [IPCP ConfNak id=0x1 &lt;addr 10.4.41.2> &lt;ms-dns1 172.16.0.2> &lt;ms-dns2 172.16.0.2>]
hub pppd[610]: rcvd [IPV6CP ConfReq id=0x1 &lt;addr fe80::9869:8831:104a:570a>]
hub pppd[610]: sent [IPV6CP ConfAck id=0x1 &lt;addr fe80::9869:8831:104a:570a>]
hub pppd[610]: rcvd [CCP ConfReq id=0x1]
hub pppd[610]: sent [CCP ConfAck id=0x1]
hub pppd[610]: rcvd [CCP ConfRej id=0x1 &lt;bsd v1 15>]
hub pppd[610]: sent [CCP ConfReq id=0x2]
hub pppd[610]: rcvd [IPCP ConfAck id=0x1 &lt;addr 10.4.41.1>]
hub pppd[610]: rcvd [IPV6CP ConfAck id=0x1 &lt;addr fe80::61d3:68e0:1e34:e123>]
hub pppd[610]: local  LL address fe80::61d3:68e0:1e34:e123
hub pppd[610]: remote LL address fe80::9869:8831:104a:570a
hub pppd[610]: Script /etc/ppp/ipv6-up started (pid 616)
hub pppd[610]: rcvd [IPCP ConfReq id=0x2 &lt;addr 10.4.41.2> &lt;ms-dns1 172.16.0.2> &lt;ms-dns2 172.16.0.2>]
hub pppd[610]: sent [IPCP ConfAck id=0x2 &lt;addr 10.4.41.2> &lt;ms-dns1 172.16.0.2> &lt;ms-dns2 172.16.0.2>]
hub pppd[610]: Script /etc/ppp/ip-pre-up started (pid 619)
hub pppd[610]: Script /etc/ppp/ip-pre-up finished (pid 619), status = 0x0
hub pppd[610]: local  IP address 10.4.41.1
hub pppd[610]: remote IP address 10.4.41.2
hub pppd[610]: Script /etc/ppp/ip-up started (pid 623)
hub pppd[610]: Script /etc/ppp/ipv6-up finished (pid 616), status = 0x0
hub pppd[610]: rcvd [CCP ConfAck id=0x2]
hub pppd[610]: Script /etc/ppp/ip-up finished (pid 623), status = 0x0</screen>
</sect2>
</sect1>

<sect1 xml:id='pppoe.conclusion'>
    <title>Pour conclure...</title>

    <para>Ce support de travaux pratiques a permis d'explorer en détail la mise
    en œuvre d'une topologie réseau complexe combinant routage inter-VLAN,
    protocole <acronym>PPPoE</acronym> et conteneurisation. La démarche
    proposée permet de configurer pas à pas les différents éléments, des
    routeurs virtuels jusqu'aux conteneurs système.</para>

    <para>L'automatisation des tâches est introduite avec l'utilisation de
    scripts pour la configuration réseau et le déploiement des conteneurs. Cela
    permet de découvrir les pratiques actuelles en matière d'administration
    système et réseau dans un contexte d'infrastructure as code.</para>

    <para>Enfin, toutes ces manipulations offrent une expérience pratique des
    protocoles utilisés sur les réseau étendus comme <acronym>PPPoE</acronym>, tout en illustrant
    l'adressage <acronym>IPv6</acronym> et la virtualisation réseau.</para>
</sect1>
</article>
