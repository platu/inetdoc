<?xml version='1.0'?>
<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN"
        "/usr/share/xml/docbook/schema/dtd/5.0/docbook.dtd"[

<!ENTITY author				SYSTEM "author.xml">
<!ENTITY legal				SYSTEM "legal.xml">

<!ENTITY access.rules.v4	SYSTEM "files/access.rules.v4">

<!ENTITY % inetdoc_urls SYSTEM 'inetdoc.urls.xml'>
%inetdoc_urls;

<!ENTITY url.isl.dot1q
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.cisco.com/en/US/tech/tk389/tk689/technologies_tech_note09186a0080094665.shtml">
  <citetitle>InterSwitch Link and IEEE 802.1Q Frame Format</citetitle></link>'>

<!ENTITY url.ieee802.1q.standard
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://standards.ieee.org/getieee802/download/802.1Q-1998.pdf">
  <citetitle>IEEE 802.1Q Standard</citetitle></link>'>

<!ENTITY url.cisco.simple.config
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="http://www.cisco.com/en/US/tech/tk389/tk815/technologies_configuration_example09186a00800949fd.shtml">
  <citetitle>Configuring InterVLAN Routing and ISL/802.1Q Trunking</citetitle></link>'>

<!ENTITY url.vtp
  '<link xmlns="http://docbook.org/ns/docbook" xlink:href="https://en.wikipedia.org/wiki/VLAN_Trunking_Protocol">
  <citetitle>VTP</citetitle></link>'>

<!-- A copy of http://www.w3.org/2003/entities/2007/w3centities-f.ent is at:
/usr/local/share -->
<!ENTITY % w3centities-f PUBLIC "-//W3C//ENTITIES Combined Set//EN//XML"
	"/usr/local/share/w3centities-f.ent">
%w3centities-f;
]>

<article xml:lang='fr' xml:id='interco.inter-vlan.qa'>
<info>
	<title>Introduction au routage inter-VLAN</title>
	&author;
	<abstract>
		<para>Le routage inter-VLAN sur les systèmes GNU/Linux présente de
		nombreux intérêts tant du point de vue conception que du point de vue
		exploitation. Avec un système GNU/Linux on peut combiner les fonctions
		de cloisonnement des domaines de diffusion avec d'autres services tels
		que le filtrage réseau <citetitle>netfilter/iptables</citetitle>. De
		plus, avec une infrastructure hétérogène associant plusieurs
		générations et|ou marques de commutateurs, GNU/Linux permet
		d'homogénéiser l'exploitation.</para>
	</abstract>
	<keywordset>
		<keyword>access</keyword>
		<keyword>8021q</keyword>
		<keyword>arp</keyword>
		<keyword>dot1q</keyword>
		<keyword>ieee802.1q</keyword>
		<keyword>iproute2</keyword>
		<keyword>iptables</keyword>
		<keyword>route</keyword>
		<keyword>routing</keyword>
		<keyword>sysctl</keyword>
		<keyword>trunk</keyword>
	</keywordset>
</info>

<sect1 xml:id='interco.inter-vlan.qa.meta'>
	&legal;
	<sect2 xml:id='interco.inter-vlan.qa.meta.file'>
		<title>Méta-information</title>

		<para>Ce document est écrit avec <link
		xlink:href="http://www.docbook.org"><citetitle>DocBook</citetitle></link>
		XML sur un système <link
		xlink:href="https://www.debian.org"><citetitle>Debian
		GNU/Linux</citetitle></link>. Il est disponible en version imprimable
		au format PDF&nbsp;: <link
		xlink:href="https://www.inetdoc.net/pdf/__printbasename__"><literal>__printbasename__</literal></link>.</para>

		<para>Les commandes utilisées dans ce document ne sont pas spécifiques
		à une version particulière des systèmes UNIX ou GNU/Linux. C'est la
		distribution <citetitle>Debian GNU/Linux</citetitle> qui est utilisée
		pour les tests présentés. Voici une liste des paquets contenant les
		commandes&nbsp;:</para>
		<itemizedlist>
		<listitem>
			<para><application>ifupdown</application> - High level tools to
			configure network interfaces</para>
		</listitem>
		<listitem>
			<para><application>iproute2</application> - networking and traffic
			control tools</para>
		</listitem>
		<listitem>
			<para><application>iptables</application> - administration tools
			for packet filtering and NAT</para>
		</listitem>
		</itemizedlist>
	</sect2>

	<sect2 xml:id='interco.inter-vlan.qa.meta.convtypo'>
		<title>Conventions typographiques</title>

		<para>Tous les exemples d'exécution des commandes sont précédés d'une
		invite utilisateur ou <wordasword>prompt</wordasword> spécifique au
		niveau des droits utilisateurs nécessaires sur le système.</para>

		<itemizedlist>
		<listitem>
			<para>Toute commande précédée de l'invite <prompt>$</prompt> ne
			nécessite aucun privilège particulier et peut être utilisée au
			niveau utilisateur simple.</para>
		</listitem>
		<listitem>
			<para>Toute commande précédée de l'invite <prompt>#</prompt>
			nécessite les privilèges du super-utilisateur.</para>
		</listitem>
		</itemizedlist>
	</sect2>
</sect1>

<sect1 xml:id='interco.inter-vlan.qa.intro.vlan'>
	<title>Réseaux locaux virtuels et routage</title>

	<para>Les définitions importantes sur les réseaux locaux virtuels et le
	routage associé sont présentées dans l'article
	&url.inter-vlan-routing;</para>

	<para>On rappelle simplement que la notion de réseau local virtuel ou
	<acronym>VLAN</acronym> permet de constituer des groupes logiques dans les
	réseaux Ethernet au niveau liaison de la modélisation
	<acronym>OSI</acronym>. Sans l'ajout d'une balise définie dans le standard
	<acronym>IEEE 802.1Q</acronym>, le format des adresses
	<acronym>MAC</acronym> ne permet aucun découpage en sous-ensembles (à
	l'exception du trafic multicast qui ne nous concerne pas ici). Une fois que
	l'on peut repérer l'appartenance à un groupe logique sur la base des
	étiquettes ajoutées aux trames il est possible de distribuer un domaine de
	diffusion entre plusieurs équipements physiques distincts.</para>

	<para>On atteint ainsi un objectif très important. Il est possible de
	concevoir une topologie logique de réseau totalement indépendante de la
	topologie physique.</para>

	<para>Réseau virtuel ou pas, il ne faut pas oublier les éléments suivants
	sur la segmentation des réseaux locaux.</para>

	<itemizedlist>
    <listitem>
		<para>Une interface de <emphasis>commutateur</emphasis> délimite un
		domaine de <emphasis>collision</emphasis>.</para>
    </listitem>
    <listitem>
		<para>Une interface de <emphasis>routeur</emphasis> délimite à la fois
		un domaine de <emphasis>collision</emphasis> et un domaine de
		<emphasis>diffusion</emphasis>.</para>
    </listitem>
  </itemizedlist>
</sect1>

<sect1 xml:id='interco.inter-vlan.qa.typical'>
	<title>Etude d'une configuration type</title>

	<para>La configuration type étudiée ici est une maquette réduite qui
	comprend un routeur et un commutateur physique. Pour les besoin des
	l'illustration, on dissocie l'équipement responsable de la commutation de
	paquets de l'équipement en charge de la commutation de trames.</para>

	<para>Le routeur unique correspond bien à la réalité des réseaux modernes.
	Du réseau d'agence d'une centaine d'hôtes au réseau de campus de plusieurs
	milliers d'hôtes, seule la capacité de traitement de l'équipement
	varie.</para>

	<para>Le commutateur unique correspond beaucoup moins à la réalité. Même
	dans un réseau d'agence, on dépasse très vite le cap des 48 ports
	connectés. On utilise alors un équipement avec une bonne capacité de
	commutation qui assure la <emphasis>distribution</emphasis> vers des
	commutateurs dédiés aux <emphasis>accès</emphasis> des hôtes. Tous ces
	commutateurs sont reliés entre eux à l'aide de <emphasis>trunks</emphasis>
	qui véhiculent les flux marqués des réseaux virtuels.</para>

	<para>Dans l'illustration présentée ici, les deux couches
	<emphasis>distribution</emphasis> et <emphasis>accès</emphasis> sont
	«synthétisées» sur un seul équipement. Un <wordasword>trunk</wordasword>
	sur un lien gigabit relie le routeur au commutateur. En véhiculant les flux
	marqués entre le routeur et le commutateur il assure la liaison entre
	routage et commutation de trames. Les hôtes directement connectés au
	commutateur n'ont aucune connaissance des balises
	<acronym>IEEE 802.1q</acronym>. Ils ne nécessitent donc aucune configuration
	particulière.</para>

	<mediaobject>
	<imageobject role='html'>
	<imagedata fileref='images/inter-vlan-routing-typical.png' format='PNG' width='640px' scalefit='1'/>
	</imageobject>
	<imageobject role='fo'>
	<imagedata fileref='images/inter-vlan-routing-typical.png' format='PNG' width='15cm' scalefit='1'/>
	</imageobject>
	<textobject>
	<phrase>Topologie type</phrase>
	</textobject>
	<caption>
	<para><link xlink:href='images/inter-vlan-routing-typical.png'>Topologie type</link></para>
	</caption>
	</mediaobject>

	<para>Cette infrastructure type comprend 2 périmètres reliés au réseau
	public Internet. Un premier périmètre de services utilisé pour
	l'hébergement des services accessibles depuis le réseau public&nbsp;:
	<acronym>DNS</acronym>, Web, courrier électronique, etc. Un second
	périmètre pour les postes de travail qui ne doivent pas être accessibles
	depuis le réseau public.</para>

	<para>On ajoute aux deux périmètres classiques, un réseau particulier dédié
	à la gestion de l'infrastructure&nbsp;: configuration des équipements,
	métrologie, journalisation, etc.</para>

	<table xml:id='sample.perimeter.addressing' frame='all' pgwide='1'>
		<title>Plan d'adressage des périmètres</title>
	<tgroup cols='3'>
	<colspec colnum='1' colwidth='1*'/>
	<colspec colnum='2' colwidth='1*'/>
	<colspec colnum='3' colwidth='3*'/>
	<thead>
	<row>
		<?dbfo bgcolor="#333" ?>
		<?dbfo color="#fff" ?>
		<entry>Nom</entry>
		<entry>VLAN numéro</entry>
		<entry>Adresse IP</entry>
	</row>
	</thead>
	<tbody>
	<row>
		<entry><citetitle>Management</citetitle></entry>
		<entry>1</entry>
		<entry><systemitem class='ipaddress'>192.168.2.0/24</systemitem></entry>
	</row>
	<row>
		<entry><citetitle>Services</citetitle></entry>
		<entry>100</entry>
		<entry><systemitem class='ipaddress'>192.168.100.0/24</systemitem></entry>
	</row>
	<row>
		<entry><citetitle>Accès</citetitle></entry>
		<entry>200</entry>
		<entry><systemitem class='ipaddress'>192.168.200.0/24</systemitem></entry>
	</row>
	</tbody>
	</tgroup>
	</table>

	<para>Le tableau ci-dessus établit la correspondance entre les périmètres,
	les réseaux virtuels et les réseaux <acronym>IP</acronym> à
	interconnecter.</para>

	<sect2 xml:id='interco.inter-vlan.qa.typical.management'>
		<title>Configuration du <wordasword>trunk</wordasword></title>
		<subtitle>Communications réseau dans le périmètre
		<emphasis>Management</emphasis></subtitle>

	<para>Du point de vue configuration, ce réseau est très particulier. Il
	véhicule les trames sans balises <acronym>IEEE 802.1q</acronym> entre le
	routeur et le commutateur. On associe à ce périmètre le
	<acronym>VLAN</acronym> <emphasis>natif</emphasis> du
	<wordasword>trunk</wordasword>.</para>

	<para>Côté routeur GNU/Linux, on configure l'interface de façon classique
	puisqu'il s'agit de traiter des trames Ethernet standard.</para>

<screen><prompt>#</prompt> ip addr add 192.168.2.2/24 brd + dev eth0</screen>

	<para>Côté commutateur, on utilise la notion de VLAN «natif» pour
	configurer l'interface en mode <wordasword>trunk</wordasword>.</para>

<screen>!
interface GigabitEthernet0/1
 switchport trunk native vlan 1
 switchport mode trunk
 no cdp enable

&lt;snipped/>
!
interface Vlan1
 ip address 192.168.2.1 255.255.255.0
 no ip redirects
 no ip unreachables
 no ip proxy-arp
 no ip route-cache</screen>

	<para>La configuration du <wordasword>trunk</wordasword> est la suivante
	:</para>

<screen>#sh int gi0/1 trunk

Port        Mode         Encapsulation  Status        Native vlan
Gi0/1       on           802.1q         trunking      1

Port      Vlans allowed on trunk
Gi0/1       1-4094

Port        Vlans allowed and active in management domain
Gi0/1       1,100,200

Port        Vlans in spanning tree forwarding state and not pruned
Gi0/1       1,100,200</screen>

	<para>Les règles d'utilisation des trames sans balises
	<acronym>IEEE 802.1q</acronym> sont les suivantes&nbsp;:</para>

	<itemizedlist>
	<listitem>
	<para>Toute trame appartenant au <acronym>VLAN</acronym> natif peut être
		émise sans balise <acronym>IEEE 802.1q</acronym> sur un port en mode
		<wordasword>trunk</wordasword> par le commutateur.</para>
	</listitem>
	<listitem>
	<para>Toute trame reçue sans balise <acronym>IEEE 802.1q</acronym> sur un
		port en mode <wordasword>trunk</wordasword> du commutateur appartient
		au <acronym>VLAN</acronym> natif.</para>
	</listitem>
	</itemizedlist>

	<para>On complétera la configuration du commutateur de façon à ce que
	toutes les opérations de gestion de l'équipement passent par ce
	<acronym>VLAN</acronym> natif.</para>

	<para>À ce niveau, les tests de communication réseau sont très simples.</para>

	<itemizedlist>
	<listitem>
		<para>Côté routeur&nbsp;:</para>
<screen>RouterA:~$ ping -c 2 192.168.2.1
PING 192.168.2.1 (192.168.2.1) 56(84) bytes of data.
64 bytes from 192.168.2.1: icmp_seq=1 ttl=255 time=19.4 ms
64 bytes from 192.168.2.1: icmp_seq=2 ttl=255 time=1.22 ms

--- 192.168.2.1 ping statistics ---
2 packets transmitted, 2 received, 0% packet loss, time 1001ms
rtt min/avg/max/mdev = 1.226/10.355/19.484/9.129 ms</screen>
	</listitem>
	<listitem>
		<para>Côté commutateur&nbsp;:</para>
<screen>Switch#ping 192.168.2.2

Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 192.168.2.2, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 1/1/4 ms</screen>
	</listitem>
	</itemizedlist>
	</sect2>

	<sect2 xml:id='interco.inter-vlan.qa.typical.tagged'>
		<title>Configuration IEEE 802.1Q sur le Routeur GNU/Linux</title>
		<subtitle>Communications réseau dans les périmètres
		<emphasis>Services</emphasis> et <emphasis>Accès</emphasis></subtitle>

	<para>Cette fois ci, il est indispensable de traiter les flux marqués avec
	les balises <acronym>IEEE 802.1q</acronym>. Aujourd'hui, tous les noyaux
	fournis avec les distributions Linux comme Debian GNU/Linux disposent d'un
	module appelé <systemitem>8021q</systemitem>.</para>

<screen><prompt>$</prompt> find /lib/modules/`uname -r` -name 8021q
/lib/modules/4.13.0-1-amd64/kernel/net/8021q</screen>

	<para>Le chargement de ce module se fait automatiquement dès qu'une
	opération relative aux étiquettes <acronym>IEEE 802.1q</acronym> est
	effectuée. Il suffit alors de consulter la liste des modules pour vérifier
	sa présence. Il est toujours possible de charger manuellement ce
	module. Voici un exemple.</para>

<screen><prompt>#</prompt> modprobe -v 8021q
modprobe -v 8021q
insmod /lib/modules/4.13.0-1-amd64/kernel/net/llc/llc.ko
insmod /lib/modules/4.13.0-1-amd64/kernel/net/802/stp.ko
insmod /lib/modules/4.13.0-1-amd64/kernel/net/802/mrp.ko
insmod /lib/modules/4.13.0-1-amd64/kernel/net/802/garp.ko
insmod /lib/modules/4.13.0-1-amd64/kernel/net/8021q/8021q.ko

<prompt>#</prompt> grep 8021q /var/log/kern.log
kernel: [  439.345617] 8021q: 802.1Q VLAN Support v1.8
kernel: [  439.345723] 8021q: adding VLAN 0 to HW filter on device eth0</screen>

	<para>Une fois la partie <wordasword>kernelspace</wordasword> traitée, on
	passe logiquement à la partie <wordasword>userspace</wordasword>. La
	commande <command>ip</command> du paquet
	<application>iproute2</application> dispose de toutes les options utiles
	pour créer les sous-interfaces associées aux étiquettes
	<acronym>IEEE 802.1q</acronym>.</para>

	<para>Dans notre exemple, la syntaxe pour les deux sous-interfaces des deux
	périmètres définis est la suivante&nbsp;:</para>

<screen><prompt>#</prompt> ip link add link eth0 name eth0.100 type vlan id 100
<prompt>#</prompt> ip link add link eth0 name eth0.200 type vlan id 200</screen>

	<para>On visualise aussi le résultat avec la commande <command>ip</command>
	:</para>

<screen><prompt>$</prompt> ip addr ls
1: lo: &lt;LOOPBACK,UP,LOWER_UP> mtu 65536 qdisc noqueue state UNKNOWN group default
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP> mtu 1500 qdisc pfifo_fast state UP group default qlen 1000
    link/ether ba:ad:00:ca:fe:00 brd ff:ff:ff:ff:ff:ff
    inet 192.168.2.2/24 brd 192.168.2.255 scope global eth0
       valid_lft forever preferred_lft forever
    inet6 fe80::b8ad:ff:feca:fe00/64 scope link
       valid_lft forever preferred_lft forever
3: <emphasis>eth0.100@eth0:</emphasis> &lt;BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default
    link/ether ba:ad:00:ca:fe:00 brd ff:ff:ff:ff:ff:ff
4: <emphasis>eth0.200@eth0:</emphasis> &lt;BROADCAST,MULTICAST> mtu 1500 qdisc noop state DOWN group default
    link/ether ba:ad:00:ca:fe:00 brd ff:ff:ff:ff:ff:ff</screen>

	<para>Les deux nouvelles sous-interfaces se configurent manuellement de
	façon classique.</para>

<screen><prompt>#</prompt> ip addr add 192.168.100.1/24 brd + dev eth0.100
<prompt>#</prompt> ip addr add 192.168.200.1/24 brd + dev eth0.200</screen>

	<para>Sur un système de la famille Debian GNU/Linux, il est possible de
	rendre cette configuration permanente en éditant le fichier
	<filename>/etc/network/interfaces</filename> comme suit&nbsp;:</para>

<screen>&lt;snipped/>
auto eth0
iface eth0 inet static
        address 192.168.2.2/24

auto eth0.100
iface eth0.100 inet static
        address 192.168.100.1/24

auto eth0.200
iface eth0.200 inet static
        address 192.168.200.1/24</screen>

	<para>Une fois la configuration des interfaces en place, on obtient la
	table de routage suivante&nbsp;:</para>

<screen><prompt>#</prompt> ip route ls
default via aaa.bbb.ccc.1 dev eth1<co xml:id='eth1.gw'/>
192.168.2.0/24 dev eth0  proto kernel  scope link  src 192.168.2.2<co xml:id='eth0'/>
192.168.100.0/24 dev eth0.100  proto kernel  scope link  src 192.168.100.1<co xml:id='eth0.100'/>
192.168.200.0/24 dev eth0.200  proto kernel  scope link  src 192.168.200.1<co xml:id='eth0.200'/>
aaa.bbb.ccc.0/24 dev eth1  proto kernel  scope link  src aaa.bbb.ccc.7<co xml:id='eth1'/></screen>

	<calloutlist>
	<callout arearefs='eth1.gw'>
		<para>L'interface <systemitem>eth1</systemitem> a la possibilité
		d'acheminer le trafic issu des deux périmètres vers l'Internet via la
		passerelle par défaut.</para>
    </callout>
	<callout arearefs='eth0'>
		<para>L'interface physique <systemitem>eth0</systemitem> sert de
		<wordasword>trunk</wordasword> entre le routeur et le commutateur. Sa
		configuration réseau correspond au périmètre
		<emphasis>Management</emphasis>. Le réseau auquel appartient
		l'interface utilise des trames sans balises
		<acronym>IEEE 802.1q</acronym>. Dans le jargon, ce
		<acronym>VLAN</acronym> est qualifié de
		<emphasis>natif</emphasis>.</para>
	</callout>
	<callout arearefs='eth0.100'>
		<para>La sous-interface <systemitem>eth0.100</systemitem> est associée
		au <acronym>VLAN</acronym> numéro 100. Sa configuration réseau
		correspond au périmètre <emphasis>Services</emphasis>. Les trames de ce
		réseau qui circulent sur le <wordasword>trunk</wordasword> sont
		complétées avec une balise <acronym>IEEE 802.1q</acronym> qui comprend
		l'identificateur de VLAN 100.</para>
	</callout>
	<callout arearefs='eth0.200'>
		<para>La sous-interface <systemitem>eth0.200</systemitem> est associée
		au <acronym>VLAN</acronym> numéro 200. Sa configuration réseau
		correspond au périmètre <emphasis>Accès</emphasis>. Les trames de ce
		réseau qui circulent sur le <wordasword>trunk</wordasword> sont
		complétées avec une balise <acronym>IEEE 802.1q</acronym> qui comprend
		l'identificateur de VLAN 200.</para>
	</callout>
	<callout arearefs='eth1'>
		<para>L'interface <systemitem>eth1</systemitem> est directement
		connectée au réseau «public». Elle n'a aucune connaissance du trafic
		issu des différents périmètres sans configuration spécifique.</para>
    </callout>
	</calloutlist>

	<para>Côté commutateur, il faut que la base de données des
	<acronym>VLAN</acronym>s connus contienne les mêmes identificateurs que
	ceux affectés sur le Routeur GNU/Linux.</para>

	<para>Le fichier de configuration du commutateur doit contenir les
	informations suivantes si le protocole &url.vtp; a préalablement été
	configuré en mode transparent&nbsp;:</para>

<screen>vlan 1
 name management
!
vlan 100
 name services
!
vlan 200
 name access</screen>

	<para>Ensuite, on affecte les ports du commutateurs aux différents
	<acronym>VLAN</acronym>s ou périmètres.</para>

<screen>Switch#conf t
Enter configuration commands, one per line.  End with CNTL/Z.
Switch(config)#int range fastEthernet 0/1 - 12
Switch(config-if-range)#switchport access vlan 100
Switch(config-if-range)#exit
Switch(config)#int range fastEthernet 0/13 - 48
Switch(config-if-range)#switchport access vlan 200
Switch(config-if)#^Z
Switch#
07:10:45: %SYS-5-CONFIG_I: Configured from console by console</screen>


	<para>On visualise le résultat des affectations de ports en mode accès de
	la façon suivante.</para>

<screen>Switch#sh vlan

VLAN Name                             Status    Ports
---- -------------------------------- --------- -------------------------------
1    default                          active
100  services                         active    Fa0/1, Fa0/2, Fa0/3, Fa0/4
                                                Fa0/5, Fa0/6, Fa0/7, Fa0/8
                                                Fa0/9, Fa0/10, Fa0/11, Fa0/12
200  access                           active    Fa0/13, Fa0/14, Fa0/15, Fa0/16
                                                Fa0/17, Fa0/18, Fa0/19, Fa0/20
                                                Fa0/21, Fa0/22, Fa0/23, Fa0/24
                                                Fa0/25, Fa0/26, Fa0/27, Fa0/28
                                                Fa0/29, Fa0/30, Fa0/31, Fa0/32
                                                Fa0/33, Fa0/34, Fa0/35, Fa0/36
                                                Fa0/37, Fa0/38, Fa0/39, Fa0/40
                                                Fa0/41, Fa0/42, Fa0/43, Fa0/44
                                                Fa0/45, Fa0/46, Fa0/47, Fa0/48</screen>
	</sect2>

	<sect2 xml:id='interco.inter-vlan.qa.typical.routing'>
		<title>Activation de la fonction routage</title>

	<para>Avec la configuration actuelle, le Routeur GNU/Linux ne remplit pas
	sa fonction. Par exemple, les hôtes du périmètre <emphasis>Accès</emphasis>
	ne peuvent pas communiquer avec les serveurs du périmètre
	<emphasis>Services</emphasis>. Il est nécessaire d'activer la fonction
	routage au niveau du noyau Linux pour que les paquets <acronym>IP</acronym>
	puissent être transmis (ou routés) entre des réseaux différents.</para>

	<para>La présentation des fonctions réseau d'une interface pilotée par le
	noyau Linux sort du cadre de ce document. Il faut consulter le support
	<xref linkend='interco.inter-vlan.qa.config.interface.lan'/> pour obtenir
	les informations nécessaires.</para>

	<para>Voici un extrait du fichier <filename>/etc/sysctl.conf</filename>
	comprenant l'ensemble des réglages appliqués au noyau Linux du Routeur de
	la configuration type. Pour appliquer ces paramètres, il suffit d'utiliser
	la commande <userinput>sysctl --system</userinput> et de valider la valeur
	de la «clé» <option>ip_forward</option> pour <acronym>IPv4</acronym>. Si
	cette valeur est à <option>1</option>, le routage est actif au niveau du
	noyau Linux.</para>

<screen>$ egrep -v '(^#|^$)' /etc/sysctl.conf
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.all.rp_filter=1
<emphasis>net.ipv4.ip_forward=1</emphasis>
net.ipv6.conf.all.forwarding=1</screen>

	<para>Les tests de communication entre les réseaux des différents
	périmètres peuvent être effectués depuis le commutateur.</para>

<screen>Switch#ping 192.168.2.2<co xml:id='ping.management'/>

Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 192.168.2.2, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 1/1/4 ms
Switch#ping 192.168.100.1<co xml:id='ping.services'/>

Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 192.168.100.1, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 1/202/1000 ms
Switch#ping 192.168.200.1<co xml:id='ping.acces'/>

Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to 192.168.200.1, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 1/1/1 ms
Switch#ping aaa.bbb.ccc.7<co xml:id='ping.public'/>

Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to aaa.bbb.ccc.7, timeout is 2 seconds:
!!!!!
Success rate is 100 percent (5/5), round-trip min/avg/max = 1/202/1004 ms
Switch#ping aaa.bbb.ccc.1<co xml:id='ping.internet'/>

Type escape sequence to abort.
Sending 5, 100-byte ICMP Echos to aaa.bbb.ccc.1, timeout is 2 seconds:
.....
Success rate is 0 percent (0/5)</screen>

	<calloutlist>
	<callout arearefs='ping.management'>
		<para>Test de communication <acronym>ICMP</acronym> sur le périmètre
		<emphasis>Management</emphasis>. Ce test n'utilise pas la fonction
		routage puisqu'il est effectué entre les deux extrémités du
		<wordasword>trunk</wordasword>.</para>
	</callout>
	<callout arearefs='ping.services'>
		<para>Test de communication <acronym>ICMP</acronym> sur le périmètre
		<emphasis>Services</emphasis>. Ce test utilise la fonction routage
		entre le réseau <systemitem
		class='ipaddress'>192.168.2.0/24</systemitem> et le réseau <systemitem
		class='ipaddress'>192.168.100.0/24</systemitem>.</para>
	</callout>
	<callout arearefs='ping.acces'>
		<para>Test de communication <acronym>ICMP</acronym> sur le périmètre
		<emphasis>Accès</emphasis>. Ce test utilise la fonction routage entre
		le réseau <systemitem class='ipaddress'>192.168.2.0/24</systemitem> et
		le réseau <systemitem
		class='ipaddress'>192.168.200.0/24</systemitem>.</para>
	</callout>
	<callout arearefs='ping.public'>
		<para>Test de communication <acronym>ICMP</acronym> vers le réseau
		public. Ce test utilise la fonction routage entre le réseau <systemitem
		class='ipaddress'>192.168.2.0/24</systemitem> et le réseau <systemitem
		class='ipaddress'>aaa.bbb.ccc.0/24</systemitem>.</para>
	</callout>
	<callout arearefs='ping.internet'>
		<para>Test de communication <acronym>ICMP</acronym> vers l'Internet. Ce
		test échoue puisque le Routeur GNU/Linux n'échange pas sa table de
		routage avec les autres routeurs de l'Internet.</para>
    </callout>
	</calloutlist>

	<para>Ces tests montrent qu'il faut compléter la configuration pour que les
	échanges réseau entre les périmètres et l'Internet soient possibles. Comme
	ces échanges réseau entre l'Internet et les périmètres ne peuvent pas se
	faire dans n'importe quelles conditions, il est nécessaire d'introduire la
	fonction de filtrage pour obtenir une interconnexion satisfaisante.</para>
	</sect2>
</sect1>

<sect1 xml:id='interco.inter-vlan.qa.netfilter'>
	<title>Interconnexion et filtrage réseau</title>

  <para>L'étude du filtrage réseau avec le noyau Linux sort du cadre de ce
  document. Il faut consulter les versions françaises du <xref
  linkend='interco.inter-vlan.qa.packet.filtering.howto'/> et du <xref
  linkend='interco.inter-vlan.qa.nat-howto'/> pour obtenir les informations
  nécessaires.</para>

  <para>D'un point de vue général, on dispose de deux solutions distinctes pour
  interconnecter les périmètres réseau administrés avec l'Internet.</para>

	<itemizedlist>
	<listitem>
	<para>Partager la table de routage des périmètres administrés avec d'autres
		routeurs via un protocole de routage dynamique tel
		qu'<acronym>OSPF</acronym>.</para>
    </listitem>
    <listitem>
    <para>Camoufler les périmètres administrés derrière une adresse
    <acronym>IP</acronym> publique accessible depuis l'Internet. Cette
    opération est réalisée avec les fonctions de filtrage réseau du noyau
    Linux&nbsp;:
    <application>netfilter</application> pour la partie
    <wordasword>kernelspace</wordasword> et <application>iptables</application>
    pour la partie <wordasword>userspace</wordasword>.</para>
    </listitem>
  </itemizedlist>

  <para>C'est la seconde proposition qui offre le plus de facilités de contrôle
  immédiat sur les flux réseau. L'outil de camouflage
  (<wordasword>masquerading</wordasword>) généralement utilisé est appelé
  traduction d'adresses (<wordasword>Native Address Translation</wordasword> ou
  <acronym>NAT</acronym>).</para>

<sect2 xml:id='interco.inter-vlan.qa.netfilter.light'>
	<title>Fonctionnement minimal</title>

	<para>Après avoir activé le routage au niveau noyau (voir <xref
		linkend='interco.inter-vlan.qa.typical.routing'/>), la fontion de
		camouflage est simple à mettre en œuvre&nbsp;:</para>

<screen><prompt>#</prompt> iptables -t nat -A POSTROUTING -o eth1 -j MASQUERADE</screen>

	<para>Cette règle réalise une traduction d'adresse source. Tout paquet
		<acronym>IPv4</acronym> sortant par l'interface
		<systemitem>eth1</systemitem> voit son adresse <acronym>IPv4</acronym>
		source réécrite avec l'adresse <acronym>IPv4</acronym> de
		l'interface.</para>

	<para>L'exécution de la règle entraîne le chargement des modules de gestion
		de la traduction d'adresses et du suivi dynamique de communication
		(<wordasword>stateful inspection</wordasword>).</para>

<screen><prompt>#</prompt> lsmod | grep nat | fmt -t -w80
nf_nat_masquerade_ipv4    16384  1 ipt_MASQUERADE
iptable_nat            16384  1
nf_nat_ipv4            16384  1 iptable_nat
nf_nat                 28672  2 nf_nat_masquerade_ipv4,nf_nat_ipv4
nf_conntrack          131072  7
   nf_conntrack_ipv4,ipt_MASQUERADE,nf_conntrack_netlink,nf_nat_masquerade_ipv4,xt_conntrack,nf_nat_ipv4,nf_nat
libcrc32c              16384  2 nf_conntrack,nf_nat
ip_tables              24576  2 iptable_filter,iptable_nat</screen>

	<para>Le suivi d'état des échanges réseau consiste à conserver une
		empreinte de paquet sortant de façon à identifier les paquets retour
		relatifs à cette «demande». Les empreintes sont stockées dans la table
		<filename>/proc/net/nf_conntrack</filename> du système de fichiers
		virtuel du noyau Linux.</para>

<screen><prompt>#</prompt> cat /proc/net/nf_conntrack | fmt -t -w80
ipv4     2 udp<co xml:id='conntrack.proto'/>       17 8 src=198.168.200.2<co xml:id='conntrack.src'/>  dst=176.9.82.67<co xml:id='conntrack.dst'/>  sport=36322 dport=123
   src=176.9.82.67 dst=aaa.bbb.ccc.7<co xml:id='conntrack.public'/> sport=123 dport=36322 mark=0 zone=0 use=2
ipv4     2 tcp      6 113 TIME_WAIT<co xml:id='conntrack.state'/>  src=203.0.113.1 dst=203.0.113.4 sport=38940
   dport=22<co xml:id='conntrack.ssh'/>  src=203.0.113.4 dst=203.0.113.1 sport=22 dport=38940 [ASSURED]
   mark=0 zone=0 use=2</screen>

	<calloutlist>
	<callout arearefs='conntrack.proto'>
	<para>Protocole de transport utilisé.</para>
	</callout>
	<callout arearefs='conntrack.state'>
	<para>État de la connexion <acronym>TCP</acronym>.</para>
	</callout>
	<callout arearefs='conntrack.src'>
	<para>Adresse <acronym>IPv4</acronym> source. Cette adresse correspond à un
		poste client appartenant au périmètre
		<emphasis>Accès</emphasis>.</para>
	</callout>
	<callout arearefs='conntrack.dst'>
	<para>Adresse <acronym>IPv4</acronym> destination. Il s'agit d'une adresse
		publique sur l'Internet.</para>
	</callout>
	<callout arearefs='conntrack.ssh'>
	<para>Le numéro de port destination du paquet identifie service Internet
		utilisé&nbsp;: <acronym>SSH</acronym>.</para>
	</callout>
	<callout arearefs='conntrack.public'>
	<para>L'adresse <acronym>IPv4</acronym> destination attendue pour un paquet
		retour est l'adresse publique du Routeur GNU/Linux. Cette ligne montre
		bien que le routeur à la connaissance des réseaux internes et du réseau
		public. C'est à partir de ces correspondances d'adresses
		<acronym>IPv4</acronym> que les décisions d'acheminement sont prises.
		Dans le cas de la traduction d'adresses par camouflage, l'adresse
		<acronym>IPv4</acronym> retour est réécrite avec l'adresse
		<acronym>IPv4</acronym> de l'hôte du périmètre
		<emphasis>Accès</emphasis>.</para>
	</callout>
	</calloutlist>

	<para>Si cette configuration a le mérite d'illustrer le fonctionnement du
		routage inter-VLAN de façon simple, elle ne correspond pas à un niveau
		de contrôle d'accès suffisant. L'objet de la section suivante est
		justement de chercher à augmenter ce niveau de contrôle.</para>
</sect2>

  <sect2 xml:id='interco.inter-vlan.qa.netfilter.midrange'>
    <title>Meilleur contrôle d'accès</title>

  <para>Dans un premier temps, il faut garantir que tous les paquets
  <acronym>IP</acronym> non autorisés sont bloqués ; ce qui revient à appliquer
  la règle <emphasis>«tout ce qui n'est pas autorisé est
  interdit»</emphasis>.</para>

  <para>La traduction de cette règle en termes de configuration revient à jeter
  tous les nouveaux paquets par défaut sur les «chaînes» d'entrée et de
  traversée des interfaces réseau</para>

<screen># iptables -P INPUT DROP
# iptables -P FORWARD DROP
</screen>

  <para>En toute rigueur, il faudrait faire de même avec la chaîne de
  sortie  <option>OUTPUT</option>. Cette présentation ayant pour but
  premier d'illustrer les concepts, ajouter les traitements de la chaîne
  <option>OUTPUT</option> ne ferait qu'alourdir les scripts sans apporter
  d'élément nouveau.</para>

  <para>Dans un deuxième temps, il faut affiner la configuration du suivi de
  communication dynamique. La règle d'or du filtrage avec la fonction
  <wordasword>stateful inspection</wordasword>, c'est <emphasis>la description
  la plus fine possible du premier paquet qu'on autorise à
  passer</emphasis>.</para>

  <para>La traduction de cette règle en termes de configuration contient 2
  parties&nbsp;:</para>

  <itemizedlist>
    <listitem>
    <para>Un bloc de règles qui organise le suivi de communication pour chaque
    chaîne sur laquelle on appliqué la politique par défaut
    <option>DROP</option>.</para>

<screen>-A &lt;CHAINE> -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT</screen>
    </listitem>
    <listitem>
    <para>Des règles spécifiques à chaque flux autorisé. C'est à la rédaction
    de ces règles qui correspondent au premier paquet autorisé qu'il faut
    apporter le plus grand soin. Un exemple pour les paquets
    <acronym>IP</acronym> émis depuis le périmètre
    <emphasis>Accès</emphasis> sur la chaîne
    <option>FORWARD</option>&nbsp;:</para>

<screen>-A FORWARD -i eth0.200 -s 192.168.200.0/24 -m conntrack --ctstate NEW -j ACCEPT</screen>
    </listitem>
  </itemizedlist>

	<para>Voici une version intermédiaire de script de configuration du
	filtrage pour le périmètre <emphasis>Accès</emphasis>. En supposant que le
	fichier des règles est stocké dans le répertoire <filename
	class='directory'>/etc/iptables/</filename>, on active les règles avec une
	commande du type <userinput>iptables-restore
	&lt;/etc/iptables/rules.v4</userinput>.</para>

<screen>&access.rules.v4;</screen>
  </sect2>
</sect1>

<?custom-pagebreak?>
<sect1 xml:id='interco.inter-vlan.qa.tp'>
  <title>Travaux pratiques</title>

  <sect2 xml:id='interco.inter-vlan.qa.tp.topo'>
    <title>Topologie type de travaux pratiques</title>

  <mediaobject>
  <imageobject role='html'>
    <imagedata fileref='images/inter-vlan-routing-topology.png' format='PNG' width='640px' scalefit='1'/>
  </imageobject>
  <imageobject role='fo'>
    <imagedata fileref='images/inter-vlan-routing-topology.png' format='PNG' width='15cm' scalefit='1'/>
  </imageobject>
  <textobject>
    <phrase>Topologie type TP</phrase>
  </textobject>
  <caption>
    <para><link xlink:href='images/inter-vlan-routing-topology.png'>Topologie type TP</link></para>
  </caption>
  </mediaobject>

  <para>Pour les besoins de ces travaux pratiques, les configurations de 4
  commutateurs de chaque salle de travaux pratiques sont effacées ainsi que
  leurs bases de données de <acronym>VLAN</acronym>s.</para>

  <para>Comme indiqué dans la topologie type ci-dessus, trois postes de travaux
  pratiques sont associés à un commutateur. Un poste joue le rôle de routeur
  inter-VLAN et les deux autres sont des postes clients appartenant chacun à un
  <acronym>VLAN</acronym> ou réseau <acronym>IP</acronym> différent.</para>

	<para>Le seul point de configuration imposé est le raccordement au réseau
		d'interconnexion avec le routeur principal de la salle de travaux
		pratiques. Ce raccordement utilise le port
		<systemitem>gi0/2</systemitem> de chaque commutateur qui doit être
		configuré en mode <wordasword>trunk</wordasword> en utilisant le
		<acronym>VLAN</acronym> natif numéro 1. Le réseau
		<acronym>IPv4</acronym> correspondant au <acronym>VLAN</acronym> numéro
		1 au préfixe réseau <systemitem
		class='ipaddress'>172.16.0.0/20</systemitem></para>

  <para>Point important, la lecture de la section «Plan d'adressage» du
	  document &url.infra.tp; donne les adresses, dans le
	  <acronym>VLAN</acronym> numéro 4, des deux routeurs ayant accès au réseau
	  de Campus.</para>

	<itemizedlist>
	<listitem>
	<para>Routeur <systemitem class='systemname'>cooper.stri</systemitem>&nbsp;:
		<systemitem class='ipaddress'>172.16.16.1/20</systemitem></para>
	</listitem>
	<listitem>
	<para>Routeur <systemitem class='systemname'>casper.stri</systemitem>&nbsp;:
		<systemitem class='ipaddress'>172.16.16.2/20</systemitem></para>
	</listitem>
	</itemizedlist>
</sect2>

<sect2 xml:id='interco.inter-vlan.qa.tp.pcs'>
	<title>Configuration des postes de travaux pratiques</title>

  <qandaset defaultlabel='number'>
    <qandaentry>
      <question>
	<para>Dans un groupe de trois postes tel qu'il a été défini ci-dessus,
	quel(s) poste(s) nécessite(nt) une configuration spécifique pour
	l'utilisation des réseaux locaux virtuels ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Toujours dans un groupe de trois postes, comment doivent être
	programmés les ports de commutateur sur lesquels les postes clients
	sont raccordés ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Encore dans un groupe de trois postes, comment doivent être
	programmés les ports de commutateur sur lesquels les routeurs	sont
	raccordés ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Dans la configuration d'un <wordasword>trunk</wordasword>,
	qu'est-ce qui distingue un <acronym>VLAN</acronym> natif ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>À partir du tableau des affectations ci-dessus, pourquoi les
	trois postes d'un groupe ne peuvent-ils pas appartenir au même réseau
	<acronym>IP</acronym> ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Quel type de poste reçoit les trames complétées par des balises
	<acronym>IEEE 802.1Q</acronym> ?</para>
      </question>
    </qandaentry>
  </qandaset>

  <para>Une fois le plan d'adressage <acronym>IP</acronym> défini, reprendre la
  <xref linkend='interco.inter-vlan.qa.typical'/> pour le groupe de postes de
  travaux pratiques.</para>

  <qandaset defaultlabel='number'>
    <qandaentry>
      <question>
	<para>Quel est le paquet qui contient les outils de configuration des
	interfaces réseau correspondant à chaque <acronym>VLAN</acronym> à
	router ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Une fois les interfaces de chaque <acronym>VLAN</acronym>
	configurées sur le poste routeur, quelles sont les opérations à
	effectuer pour que le transfert des paquets <acronym>IP</acronym> d'un
	réseau local à l'autre soit effectif ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Pourquoi doit-on utiliser la traduction d'adresses pour les flux
	réseau sortants du poste routeur vers l'Internet ? Que deviennent
	les paquets <acronym>IP</acronym> de ces flux sans traduction
	d'adresses ? Si la traduction d'adresses n'était pas disponible,
	quelle autre technique faudrait-il employer ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Donner la séquence des tests <acronym>ICMP</acronym> à effectuer
	pour valider la connectivité entre&nbsp;:</para>
	<itemizedlist>
	  <listitem>
	  <para>les postes clients et le poste routeur,</para>
	  </listitem>
	  <listitem>
	  <para>les postes clients et l'ensemble des autres interfaces du
	  routeur,</para>
	  </listitem>
	  <listitem>
	  <para>les postes clients entre eux,</para>
	  </listitem>
	  <listitem>
	  <para>les postes clients et l'Internet.</para>
	  </listitem>
	</itemizedlist>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>À l'aide de l'analyseur <application>Wireshark</application>,
	capturer des flux réseau mettant en évidence le marquage des trames
	avec les balises <acronym>IEEE 802.1Q</acronym>. Relever les numéros
	d'identification des <acronym>VLANs</acronym> vus par les interfaces du
	routeur. Quelle interface faut-il utiliser pour la capture de façon à
	visualiser l'ensemble du trafic ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Pourquoi les flux réseau capturés contiennent-ils autant de
	trames <acronym>STP</acronym> (<wordasword>Spanning Tree
	Protocol</wordasword>) ?</para>
      </question>
    </qandaentry>

    <qandaentry>
      <question>
	<para>Pourquoi la majorité des trames <acronym>STP</acronym> capturées
	sont-elles considérées comme ayant le type
	<citetitle>Ethernet II</citetitle> ? Quel aurait du être le
	type d'une trame <acronym>STP</acronym> si les balises
	<acronym>IEEE 802.1Q</acronym> n'étaient pas
	utilisées ?</para>
      </question>
    </qandaentry>
  </qandaset>
  </sect2>
</sect1>

<sect1 xml:id='interco.inter-vlan.qa.references'>
  <title>Documents de référence</title>

  <variablelist>
    <varlistentry xml:id='interco.inter-vlan.qa.ieee802.1q.standard'>
      <term><citetitle>IEEE 802.1Q Standard</citetitle></term>
      <listitem>
      <para>&url.ieee802.1q.standard;</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='interco.inter-vlan.qa.cisco.vlan.encap'>
      <term>Standards d'encapsulation dans les <wordasword>trunks</wordasword></term>
      <listitem>
      <para>Documentation <trademark>Cisco</trademark>&nbsp;:
      &url.isl.dot1q;</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='interco.inter-vlan.qa.cisco.vlan.trunk'>
      <term><citetitle>Configuring InterVLAN Routing and ISL/802.1Q Trunking</citetitle></term>
      <term>Document ID: 14976</term>
      <listitem>
      <para>Documentation <trademark>Cisco</trademark> décrivant une
      configuration simple sur le routage inter-VLAN&nbsp;:
      &url.cisco.simple.config;.</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='interco.inter-vlan.qa.segmentation.lan'>
      <term><citetitle>La segmentation des réseaux locaux</citetitle></term>
      <listitem>
      <para>&url.lan-segmentation;&nbsp;: argumentation sur les fonctions de
      commutation et de routage.</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='interco.inter-vlan.qa.config.interface.lan'>
      <term><citetitle>Configuration d'une interface de réseau local</citetitle></term>
      <listitem>
      <para>&url.config.interface.lan;&nbsp;: présentation complète sur la
      configuration des interfaces réseau avec un système GNU/Linux. La section
      sur les <citetitle>Fonctions réseau d'un interface</citetitle> traite des
      réglages possibles au niveau du noyau Linux. C'est à ce niveau que l'on
      retrouve l'activation du routage. Voir <xref
      linkend='interco.inter-vlan.qa.typical.routing'/>.</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='interco.inter-vlan.qa.packet.filtering.howto'>
      <term><citetitle>Guide Pratique du Filtrage de Paquets sous Linux 2.4</citetitle></term>
      <listitem>
      <para>&url.packet.filtering.howto;&nbsp;: présentation des concepts du
      filtrage réseau avec le noyau Linux.</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='interco.inter-vlan.qa.nat-howto'>
      <term><citetitle>Guide Pratique du NAT sous Linux 2.4</citetitle></term>
      <listitem>
      <para>&url.nat-howto;&nbsp;: présentation des concepts de la fonction de
      traduction d'adresses IP avec le noyau Linux.</para>
      </listitem>
    </varlistentry>
    <varlistentry xml:id='interco.inter-vlan.qa.archi.tp'>
      <term><citetitle>Architecture réseau des travaux pratiques</citetitle></term>
      <listitem>
	<para>Le support &url.infra.tp;  présente la topologie physique de
	la salle de travaux pratiques avec la &url.infra.tp.cabling; ainsi que
	les configurations par défaut des équipements. On y trouve aussi le
	plan d'adressage IP utilisé avec les autres supports de travaux
	pratiques, le plan de numérotations des VLANs et les affectations des
	groupes de ports des commutateurs.</para>
      </listitem>
    </varlistentry>
  </variablelist>
</sect1>
</article>
