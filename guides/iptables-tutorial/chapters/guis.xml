  <chapter xml:id="guis">
    <title xml:id="guis.title">Interfaces utilisateur graphiques pour Iptables/netfilter</title>
    <indexterm zone="guis">
      <primary>Graphical user interfaces</primary>
    </indexterm>
    <indexterm zone="guis">
      <primary>User interfaces</primary>
    </indexterm>
    <indexterm zone="guis">
      <primary>User interfaces</primary>
      <secondary>Graphical</secondary>
      <seealso>Graphical user interfaces</seealso>
    </indexterm>

    <para>
Un aspect d'iptables et de netfilter que nous n'avons pas encore vu, est
l'interface utilisateur graphique. Un des principaux problèmes avec ces
interfaces est que netfilter est très complexe, ce qui peut produire
des effets étranges. Pour cette raison, ce peut être un tâche décourageante
de créer ce type d'interfaces.
    </para>

    <para>
Plusieurs personnes et organismes ont essayé de créer des interfaces
graphiques pour netfilter et iptables, certaines avec succès, d'autres ont
abandonné après un certain temps. Ce chapitre est une petite compilation
de certaines interfaces graphiques qu'il peut être intéressant de regarder.
    </para>

    <section xml:id="fwbuilder">
      <title xml:id="fwbuilder.title">fwbuilder</title>
      <indexterm zone="fwbuilder">
        <primary>Firewall Builder</primary>
      </indexterm>
      <indexterm zone="fwbuilder">
        <primary>fwbuilder</primary>
      </indexterm>
      <indexterm zone="fwbuilder">
        <primary>Graphical user interfaces</primary>
	<secondary>fwbuilder</secondary>
      </indexterm>

      <para>
Firewall Builder, ou simplement fwbuilder, est un outil extrêmement
souple et puissant qui peut être utilisé pour créer vos propres pare-feux,
ou pour maintenir plusieurs pare-feux. Il peut être utilisé pour créer
plusieurs stratégies de pare-feux différentes, incluant iptables
(Linux 2.4 et 2.6), ipfilter (FreeBSD, NetBSD, etc.), OpenBSD pf et,
avec un module qui doit être acheté, Cisco PIX.
      </para>

      <para>
Fwbuilder a beaucoup de succès et continue d'être développé. Il fonctionne
sur un système hôte séparé, sur lequel vous créez vos fichiers de
stratégies, il les copie ensuite et les exécute sur le système cible. Il
peut maintenir depuis une simple table de règles jusqu'à de plus
importantes et compliquées. Il a également des possibilités d'extensions
selon les différentes versions d'iptables, en fonction des
cibles/correspondances disponibles sur chaque système, etc. Le résultat
peut être sauvegardé dans un fichier xml, ou un fichier de configuration
(ex. les scripts pare-feux).
      </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/fwbuilder-firewall.png" format='PNG' width='12cm' contentwidth='11.5cm'/>
          </imageobject>
        </mediaobject>

      <para>
Vous pouvez voir la "configuration" du pare-feu dans l'exemple suivant, et les
principaux menus de fwbuilder. Fwbuilder peut être trouvé sur <link
xmlns:xlink="http://www.w3.org/1999/xlink"
xmlns="http://docbook.org/ns/docbook"
xlink:href="http://www.fwbuilder.org">http://www.fwbuilder.org</link>.
      </para>

    </section>

    <section xml:id="turtlefirewall">
      <title xml:id="turtlefirewall.title">Projet Turtle Firewall</title>
      <indexterm zone="turtlefirewall">
        <primary>Turtle Firewall Project</primary>
      </indexterm>
      <indexterm zone="turtlefirewall">
        <primary>Graphical user interfaces</primary>
	<secondary>Turtle Firewall Project</secondary>
      </indexterm>

      <para>
Turtle Firewall est une excellente, bien que simple, interface pour iptables.
Il est intégré dans Webmin (une interface d'administration web). Il est
assez basique, et ne peut supporter des modifications
complexes comme fwbuilder, mais il est très capable de maintenir des
plus simples pare-feux à certains plus avancés.
      </para>

      <para>
Un gros avantage avec Turtle Firewall est qu'il est basé sur une interface
web, et donc peut être contrôlé à distance d'une manière complètement
différente de fwbuilder et de la plupart des autres outils. Bien sûr, il
présente plus de risques en termes de sécurité car Webmin est un service
supplémentaire séparé fonctionnant sur le pare-feu lui-même.
      </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/turtlefirewall-items.png" format='PNG' width='12cm' contentwidth='11.5cm'/>
          </imageobject>
        </mediaobject>

      <para>
La capture d'écran ci-dessus montre les rubriques de Turtle Firewall,
dans lesquelles vous pouvez configurer les interfaces réseau, et d'autres
choses.
      </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/turtlefirewall-main-screen.png" format='PNG' width='12cm' contentwidth='11.5cm'/>
          </imageobject>
        </mediaobject>

      <para>
La dernière capture d'écran montre l'écran principal de Turtle Firewall,
avec les règles en bas de page. L'ensemble des règles n'est pas affiché,
comme vous pouvez le voir, mais vous avez une idée générale de son
fonctionnement.
      </para>

    </section>

    <section xml:id="iscs">
      <title xml:id="iscs.title">Integrated Secure Communications System</title>
      <indexterm zone="iscs">
        <primary>Integrated Secure Communications System</primary>
      </indexterm>
      <indexterm zone="iscs">
        <primary>Graphical user interfaces</primary>
	<secondary>Integrated Secure Communications System</secondary>
      </indexterm>

      <para>
Integrated Secure Communications System, ou en plus court ISCS, est
encore en phase de développement, et aucune version publique n'est
disponible. Cependant, il semblerait être un outil très utile une fois
finalisé. Le développeur a des exigences très élevées, et c'est la
principale raison pour laquelle il n'est pas encore terminé. ISCS intègre
diverses fonctionnalités dans une seule interface d'administration.
De façon basique, ceci indique qu'une fois le projet réalisé, pour pourrez
configurer tous vos pare-feux depuis un point centralisé en utilisant
une seule interface graphique, incluant les VPN, VLAN, tunnel, syscontrol,
etc.
      </para>

      <para>
Le but principal du développeur de ISCS est de simplifier l'administration
est de supprimer les tâches fastidieuses pour les administrateurs, et ainsi
économiser des heures de travail. Ceci est réalisé en joignant les
stratégies, ensuite le programme crée les tables de règles et les "envoie"
vers des "points d'exécution" (ex. pare-feux, proxies, etc.). L'administrateur
n'a pas à écrire les tables de règles, mais simplement définir les
stratégies qui seront exécutées par ISCS.
      </para>

      <para>
Cet outil n'est pas encore achevé, comme je l'ai écrit. Cependant,
j'ai été en contact avec le principal développeur du projet, et c'est
réellement un travail très important. Quand il sera fini, je crois
qu'il sera un des meilleurs outils du marché. Vous pouvez trouver
le projet ISCS sur
<link xmlns:xlink="http://www.w3.org/1999/xlink"
xmlns="http://docbook.org/ns/docbook"
xlink:href="http://iscs.sourceforge.net/">http://iscs.sourceforge.net/</link>.
      </para>

      <note>
        <para>
Le principal développeur, John Sullivan, m'a dit de demander aux personnes
intéressées de l'aider dans le développement. Le projet est très lourd, et
il a vraiment besoin d'aide. Si vous êtes capables de le faire, votre
aide sera la bienvenue.
        </para>
      </note>
    </section>

    <section xml:id="ipmenu">
      <title xml:id="ipmenu.title">IPMenu</title>
      <indexterm zone="ipmenu">
        <primary>IPmenu</primary>
      </indexterm>
      <indexterm zone="ipmenu">
        <primary>Graphical user interfaces</primary>
	<secondary>IPmenu</secondary>
      </indexterm>

      <para>
IPMenu est un programme très utile, il est cependant simple à utiliser et
ne demande pas trop de ressources ou de bande passante. C'est un programme
en mode console, ainsi il fonctionne parfaitement avec une connexion SSH
par exemple. Il s'exécute très bien sur des machines possédant un vieux
modem.
      </para>

      <para>
Comme vous pouvez le voir sur l'image, il contient toutes les fonctionnalités
d'iptables, incluant le filtrage, mangle et nat. Il peut aussi maintenir
les tables de routage et la bande passante et sauvegarder et restaurer les
tables de règles.
      </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/ipmenu.png" format='PNG' width='12cm' contentwidth='11.5cm'/>
          </imageobject>
        </mediaobject>

      <para>
Comme vous l'avez vu dans l'image précédente, le programme est plutôt basique,
mais il convient dans la plupart des cas. En premier, il est très simple, et
peut être utilisé pour l'administration à distance, et fonctionne avec SSH
via une console standard, il est également sécurisé. Vous pouvez trouver le
programme sur <link xmlns:xlink="http://www.w3.org/1999/xlink"
xmlns="http://docbook.org/ns/docbook"
xlink:href="http://users.pandora.be/stes/ipmenu.html">
http://users.pandora.be/stes/ipmenu.html</link>.
      </para>
    </section>

    <section xml:id="easyfwgenerator">
      <title xml:id="easyfwgenerator.title">Easy Firewall Generator</title>
      <indexterm zone="easyfwgenerator">
        <primary>Easy Firewall Generator</primary>
      </indexterm>
      <indexterm zone="easyfwgenerator">
        <primary>Graphical user interfaces</primary>
	<secondary>Easy Firewall Generator</secondary>
      </indexterm>


      <para>
Easy Firewall Generator est un autre développement intéressant. De façon
basique, c'est une page web PHP dans laquelle vous spécifiez les options
de votre pare-feu, ensuite la configuration se fait en cliquant sur un
bouton, ce qui génère une table de règles iptables que vous pouvez utiliser.
      </para>

      <para>
Le script contient toutes les règles de base, avec en plus certaines autres
destinées à contenir des modèles insolites dans les paquets. Il contient
aussi les modifications sysctl IP spécifiques qui peuvent être nécessaires,
le chargement des modules, etc. La table de règles est écrite dans le format
init.d de red Hat.
      </para>

        <mediaobject>
          <imageobject>
            <imagedata fileref="images/easyfwgen.png" format='PNG' width='12cm' contentwidth='11.5cm'/>
          </imageobject>
        </mediaobject>

      <para>
Cette capture d'écran montre une des étapes finales de la configuration
du script du pare-feu créé par le programme. Vous pouvez trouver
plus d'information sur
<link xmlns:xlink="http://www.w3.org/1999/xlink"
xmlns="http://docbook.org/ns/docbook"
xlink:href="http://easyfwgen.morizot.net/">http://easyfwgen.morizot.net/</link>.
      </para>

    </section>

    <section xml:id="guis.whatsnext">
      <title xml:id="guis.whatsnext.title">Partie suivante</title>

      <para>
Dans ce chapitre nous avons vu ce que nous pouvons faire avec certaines
interfaces graphiques. Notez qu'il existe beaucoup plus d'interfaces
sur le marché. La plupart d'entre elles sont open source et libres
d'utilisation, tandis que certaines sont des applications commerciales
qui nécessitent d'être achetées pour obtenir un support ou une
fonctionnalité complets.
      </para>

    </section>

  </chapter>































